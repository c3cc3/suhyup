# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/utl/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/fq
pkgincludedir = $(includedir)/fq
pkglibdir = $(libdir)/fq
pkglibexecdir = $(libexecdir)/fq
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = fqm$(EXEEXT) MakeTestData$(EXEEXT) ManageFQ$(EXEEXT) \
	ManageSHMQ$(EXEEXT) TestFQ$(EXEEXT) TestSQ$(EXEEXT) \
	deFQ_utl$(EXEEXT) deFQ_batch$(EXEEXT) deFQ_thread$(EXEEXT) \
	deFQ_XA$(EXEEXT) deFQ_XA_thread$(EXEEXT) enFQ_utl$(EXEEXT) \
	enFQ_thread$(EXEEXT) mem_queue_test$(EXEEXT) qvf$(EXEEXT) \
	qvf_all$(EXEEXT) retrieveMon$(EXEEXT) ManageHashMap$(EXEEXT) \
	SetQueueHeader$(EXEEXT) FatalNotifier$(EXEEXT) \
	SetMaster$(EXEEXT) L4_listener$(EXEEXT) LogCollector$(EXEEXT) \
	LogAgent$(EXEEXT) net_text_qt$(EXEEXT) FQ_server$(EXEEXT) \
	GenQinfo$(EXEEXT) TCP_sync_server$(EXEEXT) \
	TCP_sync_client$(EXEEXT) FQ_Protocol_svr$(EXEEXT) \
	FQ_Protocol_cli_txt$(EXEEXT) relay_FQ$(EXEEXT) \
	LogNotifier$(EXEEXT) enFQ_datafile$(EXEEXT) \
	deQ_XA_enQ$(EXEEXT) lock_perfermance_TPS$(EXEEXT) \
	deFQ_bundle$(EXEEXT) mv_file_to_fq$(EXEEXT) \
	mv_file_b_to_fq$(EXEEXT) mv_file_b_to_fq_multi$(EXEEXT) \
	create_hash_map$(EXEEXT) unlink_hash_map$(EXEEXT) \
	fq_snapshot$(EXEEXT) fq_view$(EXEEXT)
noinst_PROGRAMS =
subdir = src/utl
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_FQ_Protocol_cli_txt_OBJECTS =  \
	FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.$(OBJEXT)
FQ_Protocol_cli_txt_OBJECTS = $(am_FQ_Protocol_cli_txt_OBJECTS)
am__DEPENDENCIES_1 =
FQ_Protocol_cli_txt_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	./../lib/libfq.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
FQ_Protocol_cli_txt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(FQ_Protocol_cli_txt_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_FQ_Protocol_svr_OBJECTS =  \
	FQ_Protocol_svr-FQ_Protocol_svr.$(OBJEXT)
FQ_Protocol_svr_OBJECTS = $(am_FQ_Protocol_svr_OBJECTS)
FQ_Protocol_svr_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
FQ_Protocol_svr_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(FQ_Protocol_svr_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_FQ_server_OBJECTS = FQ_server-FQ_server.$(OBJEXT)
FQ_server_OBJECTS = $(am_FQ_server_OBJECTS)
FQ_server_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
FQ_server_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(FQ_server_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_FatalNotifier_OBJECTS = FatalNotifier-FatalNotifier.$(OBJEXT)
FatalNotifier_OBJECTS = $(am_FatalNotifier_OBJECTS)
FatalNotifier_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
FatalNotifier_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(FatalNotifier_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_GenQinfo_OBJECTS = GenQinfo-GenQinfo.$(OBJEXT)
GenQinfo_OBJECTS = $(am_GenQinfo_OBJECTS)
GenQinfo_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
GenQinfo_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(GenQinfo_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_L4_listener_OBJECTS = L4_listener-L4_listener.$(OBJEXT)
L4_listener_OBJECTS = $(am_L4_listener_OBJECTS)
L4_listener_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
L4_listener_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(L4_listener_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_LogAgent_OBJECTS = LogAgent-LogAgent.$(OBJEXT)
LogAgent_OBJECTS = $(am_LogAgent_OBJECTS)
LogAgent_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
LogAgent_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(LogAgent_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_LogCollector_OBJECTS = LogCollector-LogCollector.$(OBJEXT)
LogCollector_OBJECTS = $(am_LogCollector_OBJECTS)
LogCollector_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
LogCollector_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(LogCollector_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_LogNotifier_OBJECTS = LogNotifier-LogNotifier.$(OBJEXT)
LogNotifier_OBJECTS = $(am_LogNotifier_OBJECTS)
LogNotifier_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
LogNotifier_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(LogNotifier_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_MakeTestData_OBJECTS = MakeTestData-MakeTestData.$(OBJEXT)
MakeTestData_OBJECTS = $(am_MakeTestData_OBJECTS)
MakeTestData_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
MakeTestData_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(MakeTestData_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ManageFQ_OBJECTS = ManageFQ-ManageFQ.$(OBJEXT)
ManageFQ_OBJECTS = $(am_ManageFQ_OBJECTS)
ManageFQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
ManageFQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ManageFQ_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ManageHashMap_OBJECTS = ManageHashMap-ManageHashMap.$(OBJEXT)
ManageHashMap_OBJECTS = $(am_ManageHashMap_OBJECTS)
ManageHashMap_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
ManageHashMap_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ManageHashMap_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ManageSHMQ_OBJECTS = ManageSHMQ-ManageSHMQ.$(OBJEXT)
ManageSHMQ_OBJECTS = $(am_ManageSHMQ_OBJECTS)
ManageSHMQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
ManageSHMQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ManageSHMQ_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_SetMaster_OBJECTS = SetMaster-SetMaster.$(OBJEXT)
SetMaster_OBJECTS = $(am_SetMaster_OBJECTS)
SetMaster_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
SetMaster_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(SetMaster_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_SetQueueHeader_OBJECTS = SetQueueHeader-SetQueueHeader.$(OBJEXT)
SetQueueHeader_OBJECTS = $(am_SetQueueHeader_OBJECTS)
SetQueueHeader_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
SetQueueHeader_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(SetQueueHeader_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_TCP_sync_client_OBJECTS =  \
	TCP_sync_client-TCP_sync_client.$(OBJEXT)
TCP_sync_client_OBJECTS = $(am_TCP_sync_client_OBJECTS)
TCP_sync_client_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
TCP_sync_client_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(TCP_sync_client_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_TCP_sync_server_OBJECTS =  \
	TCP_sync_server-TCP_sync_server.$(OBJEXT)
TCP_sync_server_OBJECTS = $(am_TCP_sync_server_OBJECTS)
TCP_sync_server_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
TCP_sync_server_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(TCP_sync_server_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_TestFQ_OBJECTS = TestFQ-TestFQ.$(OBJEXT)
TestFQ_OBJECTS = $(am_TestFQ_OBJECTS)
TestFQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
TestFQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(TestFQ_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_TestSQ_OBJECTS = TestSQ-TestSQ.$(OBJEXT)
TestSQ_OBJECTS = $(am_TestSQ_OBJECTS)
TestSQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
TestSQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(TestSQ_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_create_hash_map_OBJECTS =  \
	create_hash_map-create_hash_map.$(OBJEXT)
create_hash_map_OBJECTS = $(am_create_hash_map_OBJECTS)
create_hash_map_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
create_hash_map_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(create_hash_map_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_deFQ_XA_OBJECTS = deFQ_XA-deFQ_XA.$(OBJEXT)
deFQ_XA_OBJECTS = $(am_deFQ_XA_OBJECTS)
deFQ_XA_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_XA_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deFQ_XA_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_deFQ_XA_thread_OBJECTS = deFQ_XA_thread-deFQ_XA_thread.$(OBJEXT)
deFQ_XA_thread_OBJECTS = $(am_deFQ_XA_thread_OBJECTS)
deFQ_XA_thread_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_XA_thread_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(deFQ_XA_thread_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_deFQ_batch_OBJECTS = deFQ_batch-deFQ_batch.$(OBJEXT)
deFQ_batch_OBJECTS = $(am_deFQ_batch_OBJECTS)
deFQ_batch_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_batch_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deFQ_batch_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_deFQ_bundle_OBJECTS = deFQ_bundle-deFQ_bundle.$(OBJEXT)
deFQ_bundle_OBJECTS = $(am_deFQ_bundle_OBJECTS)
deFQ_bundle_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_bundle_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deFQ_bundle_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_deFQ_thread_OBJECTS = deFQ_thread-deFQ_thread.$(OBJEXT)
deFQ_thread_OBJECTS = $(am_deFQ_thread_OBJECTS)
deFQ_thread_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_thread_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deFQ_thread_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_deFQ_utl_OBJECTS = deFQ_utl-deFQ_utl.$(OBJEXT)
deFQ_utl_OBJECTS = $(am_deFQ_utl_OBJECTS)
deFQ_utl_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deFQ_utl_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deFQ_utl_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_deQ_XA_enQ_OBJECTS = deQ_XA_enQ-deQ_XA_enQ.$(OBJEXT)
deQ_XA_enQ_OBJECTS = $(am_deQ_XA_enQ_OBJECTS)
deQ_XA_enQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
deQ_XA_enQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(deQ_XA_enQ_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_enFQ_datafile_OBJECTS = enFQ_datafile-enFQ_datafile.$(OBJEXT)
enFQ_datafile_OBJECTS = $(am_enFQ_datafile_OBJECTS)
enFQ_datafile_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
enFQ_datafile_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(enFQ_datafile_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_enFQ_thread_OBJECTS = enFQ_thread-enFQ_thread.$(OBJEXT)
enFQ_thread_OBJECTS = $(am_enFQ_thread_OBJECTS)
enFQ_thread_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
enFQ_thread_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(enFQ_thread_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_enFQ_utl_OBJECTS = enFQ_utl-enFQ_utl.$(OBJEXT)
enFQ_utl_OBJECTS = $(am_enFQ_utl_OBJECTS)
enFQ_utl_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
enFQ_utl_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(enFQ_utl_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_fq_snapshot_OBJECTS = fq_snapshot-fq_snapshot.$(OBJEXT)
fq_snapshot_OBJECTS = $(am_fq_snapshot_OBJECTS)
fq_snapshot_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
fq_snapshot_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(fq_snapshot_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_fq_view_OBJECTS = fq_view-fq_view.$(OBJEXT)
fq_view_OBJECTS = $(am_fq_view_OBJECTS)
fq_view_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
fq_view_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(fq_view_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_fqm_OBJECTS = fqm-fqm.$(OBJEXT)
fqm_OBJECTS = $(am_fqm_OBJECTS)
fqm_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
fqm_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(fqm_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_lock_perfermance_TPS_OBJECTS =  \
	lock_perfermance_TPS-lock_perfermance_TPS.$(OBJEXT)
lock_perfermance_TPS_OBJECTS = $(am_lock_perfermance_TPS_OBJECTS)
lock_perfermance_TPS_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	./../lib/libfq.la
lock_perfermance_TPS_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(lock_perfermance_TPS_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mem_queue_test_OBJECTS = mem_queue_test-mem_queue_test.$(OBJEXT)
mem_queue_test_OBJECTS = $(am_mem_queue_test_OBJECTS)
mem_queue_test_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
mem_queue_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(mem_queue_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_mv_file_b_to_fq_OBJECTS =  \
	mv_file_b_to_fq-mv_file_b_to_fq.$(OBJEXT)
mv_file_b_to_fq_OBJECTS = $(am_mv_file_b_to_fq_OBJECTS)
mv_file_b_to_fq_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
mv_file_b_to_fq_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(mv_file_b_to_fq_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_mv_file_b_to_fq_multi_OBJECTS =  \
	mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.$(OBJEXT)
mv_file_b_to_fq_multi_OBJECTS = $(am_mv_file_b_to_fq_multi_OBJECTS)
mv_file_b_to_fq_multi_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	./../lib/libfq.la
mv_file_b_to_fq_multi_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(mv_file_b_to_fq_multi_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mv_file_to_fq_OBJECTS = mv_file_to_fq-mv_file_to_fq.$(OBJEXT)
mv_file_to_fq_OBJECTS = $(am_mv_file_to_fq_OBJECTS)
mv_file_to_fq_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
mv_file_to_fq_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mv_file_to_fq_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_net_text_qt_OBJECTS = net_text_qt-net_text_qt.$(OBJEXT)
net_text_qt_OBJECTS = $(am_net_text_qt_OBJECTS)
net_text_qt_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
net_text_qt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(net_text_qt_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_qvf_OBJECTS = qvf-qvf.$(OBJEXT)
qvf_OBJECTS = $(am_qvf_OBJECTS)
qvf_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
qvf_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(qvf_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_qvf_all_OBJECTS = qvf_all-qvf_all.$(OBJEXT)
qvf_all_OBJECTS = $(am_qvf_all_OBJECTS)
qvf_all_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
qvf_all_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(qvf_all_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_relay_FQ_OBJECTS = relay_FQ-relay_FQ.$(OBJEXT)
relay_FQ_OBJECTS = $(am_relay_FQ_OBJECTS)
relay_FQ_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
relay_FQ_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(relay_FQ_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_retrieveMon_OBJECTS = retrieveMon-retrieveMon.$(OBJEXT)
retrieveMon_OBJECTS = $(am_retrieveMon_OBJECTS)
retrieveMon_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
retrieveMon_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(retrieveMon_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_unlink_hash_map_OBJECTS =  \
	unlink_hash_map-unlink_hash_map.$(OBJEXT)
unlink_hash_map_OBJECTS = $(am_unlink_hash_map_OBJECTS)
unlink_hash_map_DEPENDENCIES = $(am__DEPENDENCIES_1) ./../lib/libfq.la
unlink_hash_map_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(unlink_hash_map_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po \
	./$(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po \
	./$(DEPDIR)/FQ_server-FQ_server.Po \
	./$(DEPDIR)/FatalNotifier-FatalNotifier.Po \
	./$(DEPDIR)/GenQinfo-GenQinfo.Po \
	./$(DEPDIR)/L4_listener-L4_listener.Po \
	./$(DEPDIR)/LogAgent-LogAgent.Po \
	./$(DEPDIR)/LogCollector-LogCollector.Po \
	./$(DEPDIR)/LogNotifier-LogNotifier.Po \
	./$(DEPDIR)/MakeTestData-MakeTestData.Po \
	./$(DEPDIR)/ManageFQ-ManageFQ.Po \
	./$(DEPDIR)/ManageHashMap-ManageHashMap.Po \
	./$(DEPDIR)/ManageSHMQ-ManageSHMQ.Po \
	./$(DEPDIR)/SetMaster-SetMaster.Po \
	./$(DEPDIR)/SetQueueHeader-SetQueueHeader.Po \
	./$(DEPDIR)/TCP_sync_client-TCP_sync_client.Po \
	./$(DEPDIR)/TCP_sync_server-TCP_sync_server.Po \
	./$(DEPDIR)/TestFQ-TestFQ.Po ./$(DEPDIR)/TestSQ-TestSQ.Po \
	./$(DEPDIR)/create_hash_map-create_hash_map.Po \
	./$(DEPDIR)/deFQ_XA-deFQ_XA.Po \
	./$(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po \
	./$(DEPDIR)/deFQ_batch-deFQ_batch.Po \
	./$(DEPDIR)/deFQ_bundle-deFQ_bundle.Po \
	./$(DEPDIR)/deFQ_thread-deFQ_thread.Po \
	./$(DEPDIR)/deFQ_utl-deFQ_utl.Po \
	./$(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po \
	./$(DEPDIR)/enFQ_datafile-enFQ_datafile.Po \
	./$(DEPDIR)/enFQ_thread-enFQ_thread.Po \
	./$(DEPDIR)/enFQ_utl-enFQ_utl.Po \
	./$(DEPDIR)/fq_snapshot-fq_snapshot.Po \
	./$(DEPDIR)/fq_view-fq_view.Po ./$(DEPDIR)/fqm-fqm.Po \
	./$(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po \
	./$(DEPDIR)/mem_queue_test-mem_queue_test.Po \
	./$(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po \
	./$(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po \
	./$(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po \
	./$(DEPDIR)/net_text_qt-net_text_qt.Po ./$(DEPDIR)/qvf-qvf.Po \
	./$(DEPDIR)/qvf_all-qvf_all.Po \
	./$(DEPDIR)/relay_FQ-relay_FQ.Po \
	./$(DEPDIR)/retrieveMon-retrieveMon.Po \
	./$(DEPDIR)/unlink_hash_map-unlink_hash_map.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(FQ_Protocol_cli_txt_SOURCES) $(FQ_Protocol_svr_SOURCES) \
	$(FQ_server_SOURCES) $(FatalNotifier_SOURCES) \
	$(GenQinfo_SOURCES) $(L4_listener_SOURCES) $(LogAgent_SOURCES) \
	$(LogCollector_SOURCES) $(LogNotifier_SOURCES) \
	$(MakeTestData_SOURCES) $(ManageFQ_SOURCES) \
	$(ManageHashMap_SOURCES) $(ManageSHMQ_SOURCES) \
	$(SetMaster_SOURCES) $(SetQueueHeader_SOURCES) \
	$(TCP_sync_client_SOURCES) $(TCP_sync_server_SOURCES) \
	$(TestFQ_SOURCES) $(TestSQ_SOURCES) $(create_hash_map_SOURCES) \
	$(deFQ_XA_SOURCES) $(deFQ_XA_thread_SOURCES) \
	$(deFQ_batch_SOURCES) $(deFQ_bundle_SOURCES) \
	$(deFQ_thread_SOURCES) $(deFQ_utl_SOURCES) \
	$(deQ_XA_enQ_SOURCES) $(enFQ_datafile_SOURCES) \
	$(enFQ_thread_SOURCES) $(enFQ_utl_SOURCES) \
	$(fq_snapshot_SOURCES) $(fq_view_SOURCES) $(fqm_SOURCES) \
	$(lock_perfermance_TPS_SOURCES) $(mem_queue_test_SOURCES) \
	$(mv_file_b_to_fq_SOURCES) $(mv_file_b_to_fq_multi_SOURCES) \
	$(mv_file_to_fq_SOURCES) $(net_text_qt_SOURCES) $(qvf_SOURCES) \
	$(qvf_all_SOURCES) $(relay_FQ_SOURCES) $(retrieveMon_SOURCES) \
	$(unlink_hash_map_SOURCES)
DIST_SOURCES = $(FQ_Protocol_cli_txt_SOURCES) \
	$(FQ_Protocol_svr_SOURCES) $(FQ_server_SOURCES) \
	$(FatalNotifier_SOURCES) $(GenQinfo_SOURCES) \
	$(L4_listener_SOURCES) $(LogAgent_SOURCES) \
	$(LogCollector_SOURCES) $(LogNotifier_SOURCES) \
	$(MakeTestData_SOURCES) $(ManageFQ_SOURCES) \
	$(ManageHashMap_SOURCES) $(ManageSHMQ_SOURCES) \
	$(SetMaster_SOURCES) $(SetQueueHeader_SOURCES) \
	$(TCP_sync_client_SOURCES) $(TCP_sync_server_SOURCES) \
	$(TestFQ_SOURCES) $(TestSQ_SOURCES) $(create_hash_map_SOURCES) \
	$(deFQ_XA_SOURCES) $(deFQ_XA_thread_SOURCES) \
	$(deFQ_batch_SOURCES) $(deFQ_bundle_SOURCES) \
	$(deFQ_thread_SOURCES) $(deFQ_utl_SOURCES) \
	$(deQ_XA_enQ_SOURCES) $(enFQ_datafile_SOURCES) \
	$(enFQ_thread_SOURCES) $(enFQ_utl_SOURCES) \
	$(fq_snapshot_SOURCES) $(fq_view_SOURCES) $(fqm_SOURCES) \
	$(lock_perfermance_TPS_SOURCES) $(mem_queue_test_SOURCES) \
	$(mv_file_b_to_fq_SOURCES) $(mv_file_b_to_fq_multi_SOURCES) \
	$(mv_file_to_fq_SOURCES) $(net_text_qt_SOURCES) $(qvf_SOURCES) \
	$(qvf_all_SOURCES) $(relay_FQ_SOURCES) $(retrieveMon_SOURCES) \
	$(unlink_hash_map_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/ums/fq/src/fq-14.8.0/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/ums/fq/src/fq-14.8.0/missing' autoconf
AUTOHEADER = ${SHELL} '/ums/fq/src/fq-14.8.0/missing' autoheader
AUTOMAKE = ${SHELL} '/ums/fq/src/fq-14.8.0/missing' automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DOS_LINUX -Wno-unused-result -Wfatal-errors -m64
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread -lcurses -lrt -lnsl -lm -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/ums/fq/src/fq-14.8.0/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = fq
PACKAGE_BUGREPORT = gwisang.choi@gmail.com
PACKAGE_NAME = fq
PACKAGE_STRING = fq 14.8.1
PACKAGE_TARNAME = fq
PACKAGE_URL = 
PACKAGE_VERSION = 14.8.1
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 14.8.1
abs_builddir = /ums/fq/src/fq-14.8.0/src/utl
abs_srcdir = /ums/fq/src/fq-14.8.0/src/utl
abs_top_builddir = /ums/fq/src/fq-14.8.0
abs_top_srcdir = /ums/fq/src/fq-14.8.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /ums/fq/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = /ums/fq/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /ums/fq/src/fq-14.8.0/install-sh
libdir = /ums/fq/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
all_include_dirs = -g\
	-I$(top_srcdir)/src/lib

all_libraries = -lm -ldl -lrt -lpthread -lm
#
#all_libraries = -lm -ldl -lnsl -lrt -lpthread -lsocket -lm
fqm_SOURCES = fqm.c
fqm_CFLAGS = $(all_include_dirs)
fqm_LDADD = $(all_libraries) ./../lib/libfq.la
#
MakeTestData_SOURCES = MakeTestData.c
MakeTestData_CFLAGS = $(all_include_dirs)
MakeTestData_LDADD = $(all_libraries) ./../lib/libfq.la
#
ManageFQ_SOURCES = ManageFQ.c
ManageFQ_CFLAGS = $(all_include_dirs)
ManageFQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
ManageSHMQ_SOURCES = ManageSHMQ.c
ManageSHMQ_CFLAGS = $(all_include_dirs)
ManageSHMQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
TestFQ_SOURCES = TestFQ.c
TestFQ_CFLAGS = $(all_include_dirs)
TestFQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
TestSQ_SOURCES = TestSQ.c
TestSQ_CFLAGS = $(all_include_dirs)
TestSQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_utl_SOURCES = deFQ_utl.c
deFQ_utl_CFLAGS = $(all_include_dirs)
deFQ_utl_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_batch_SOURCES = deFQ_batch.c
deFQ_batch_CFLAGS = $(all_include_dirs)
deFQ_batch_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_thread_SOURCES = deFQ_thread.c
deFQ_thread_CFLAGS = $(all_include_dirs)
deFQ_thread_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_XA_SOURCES = deFQ_XA.c
deFQ_XA_CFLAGS = $(all_include_dirs)
deFQ_XA_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_XA_thread_SOURCES = deFQ_XA_thread.c
deFQ_XA_thread_CFLAGS = $(all_include_dirs)
deFQ_XA_thread_LDADD = $(all_libraries) ./../lib/libfq.la
#
enFQ_utl_SOURCES = enFQ_utl.c
enFQ_utl_CFLAGS = $(all_include_dirs)
enFQ_utl_LDADD = $(all_libraries) ./../lib/libfq.la
#
enFQ_thread_SOURCES = enFQ_thread.c
enFQ_thread_CFLAGS = $(all_include_dirs)
enFQ_thread_LDADD = $(all_libraries) ./../lib/libfq.la
#
mem_queue_test_SOURCES = mem_queue_test.c
mem_queue_test_CFLAGS = $(all_include_dirs)
mem_queue_test_LDADD = $(all_libraries) ./../lib/libfq.la
#
qvf_SOURCES = qvf.c
qvf_CFLAGS = $(all_include_dirs)
qvf_LDADD = $(all_libraries) ./../lib/libfq.la
#
qvf_all_SOURCES = qvf_all.c
qvf_all_CFLAGS = $(all_include_dirs)
qvf_all_LDADD = $(all_libraries) ./../lib/libfq.la
#
retrieveMon_SOURCES = retrieveMon.c
retrieveMon_CFLAGS = $(all_include_dirs)
retrieveMon_LDADD = $(all_libraries) ./../lib/libfq.la
#
ManageHashMap_SOURCES = ManageHashMap.c
ManageHashMap_CFLAGS = $(all_include_dirs)
ManageHashMap_LDADD = $(all_libraries) ./../lib/libfq.la
#
SetQueueHeader_SOURCES = SetQueueHeader.c
SetQueueHeader_CFLAGS = $(all_include_dirs)
SetQueueHeader_LDADD = $(all_libraries) ./../lib/libfq.la
#
FatalNotifier_SOURCES = FatalNotifier.c
FatalNotifier_CFLAGS = $(all_include_dirs)
FatalNotifier_LDADD = $(all_libraries) ./../lib/libfq.la
#
SetMaster_SOURCES = SetMaster.c
SetMaster_CFLAGS = $(all_include_dirs)
SetMaster_LDADD = $(all_libraries) ./../lib/libfq.la
#
L4_listener_SOURCES = L4_listener.c
L4_listener_CFLAGS = $(all_include_dirs)
L4_listener_LDADD = $(all_libraries) ./../lib/libfq.la
#
LogCollector_SOURCES = LogCollector.c
LogCollector_CFLAGS = $(all_include_dirs)
LogCollector_LDADD = $(all_libraries) ./../lib/libfq.la
#
LogAgent_SOURCES = LogAgent.c
LogAgent_CFLAGS = $(all_include_dirs)
LogAgent_LDADD = $(all_libraries) ./../lib/libfq.la
#
net_text_qt_SOURCES = net_text_qt.c
net_text_qt_CFLAGS = $(all_include_dirs)
net_text_qt_LDADD = $(all_libraries) ./../lib/libfq.la
#
FQ_server_SOURCES = FQ_server.c
FQ_server_CFLAGS = $(all_include_dirs)
FQ_server_LDADD = $(all_libraries) ./../lib/libfq.la
#
GenQinfo_SOURCES = GenQinfo.c
GenQinfo_CFLAGS = $(all_include_dirs)
GenQinfo_LDADD = $(all_libraries) ./../lib/libfq.la
#
TCP_sync_server_SOURCES = TCP_sync_server.c
TCP_sync_server_CFLAGS = $(all_include_dirs)
TCP_sync_server_LDADD = $(all_libraries) ./../lib/libfq.la
#
TCP_sync_client_SOURCES = TCP_sync_client.c
TCP_sync_client_CFLAGS = $(all_include_dirs)
TCP_sync_client_LDADD = $(all_libraries) ./../lib/libfq.la
#
FQ_Protocol_svr_SOURCES = FQ_Protocol_svr.c
FQ_Protocol_svr_CFLAGS = $(all_include_dirs)
FQ_Protocol_svr_LDADD = $(all_libraries) ./../lib/libfq.la
#
FQ_Protocol_cli_txt_SOURCES = FQ_Protocol_cli_txt.c
FQ_Protocol_cli_txt_CFLAGS = $(all_include_dirs)
FQ_Protocol_cli_txt_LDADD = $(all_libraries) ./../lib/libfq.la
#
relay_FQ_SOURCES = relay_FQ.c
relay_FQ_CFLAGS = $(all_include_dirs)
relay_FQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
LogNotifier_SOURCES = LogNotifier.c
LogNotifier_CFLAGS = $(all_include_dirs)
LogNotifier_LDADD = $(all_libraries) ./../lib/libfq.la
#
enFQ_datafile_SOURCES = enFQ_datafile.c
enFQ_datafile_CFLAGS = $(all_include_dirs)
enFQ_datafile_LDADD = $(all_libraries) ./../lib/libfq.la
#
deQ_XA_enQ_SOURCES = deQ_XA_enQ.c
deQ_XA_enQ_CFLAGS = $(all_include_dirs)
deQ_XA_enQ_LDADD = $(all_libraries) ./../lib/libfq.la
#
lock_perfermance_TPS_SOURCES = lock_perfermance_TPS.c
lock_perfermance_TPS_CFLAGS = $(all_include_dirs)
lock_perfermance_TPS_LDADD = $(all_libraries) ./../lib/libfq.la
#
deFQ_bundle_SOURCES = deFQ_bundle.c
deFQ_bundle_CFLAGS = $(all_include_dirs)
deFQ_bundle_LDADD = $(all_libraries) ./../lib/libfq.la
#
mv_file_to_fq_SOURCES = mv_file_to_fq.c
mv_file_to_fq_CFLAGS = $(all_include_dirs)
mv_file_to_fq_LDADD = $(all_libraries) ./../lib/libfq.la
#
mv_file_b_to_fq_SOURCES = mv_file_b_to_fq.c
mv_file_b_to_fq_CFLAGS = $(all_include_dirs)
mv_file_b_to_fq_LDADD = $(all_libraries) ./../lib/libfq.la
#
mv_file_b_to_fq_multi_SOURCES = mv_file_b_to_fq_multi.c
mv_file_b_to_fq_multi_CFLAGS = $(all_include_dirs)
mv_file_b_to_fq_multi_LDADD = $(all_libraries) ./../lib/libfq.la
#
create_hash_map_SOURCES = create_hash_map.c
create_hash_map_CFLAGS = $(all_include_dirs)
create_hash_map_LDADD = $(all_libraries) ./../lib/libfq.la
#
unlink_hash_map_SOURCES = unlink_hash_map.c
unlink_hash_map_CFLAGS = $(all_include_dirs)
unlink_hash_map_LDADD = $(all_libraries) ./../lib/libfq.la
#
fq_snapshot_SOURCES = fq_snapshot.c
fq_snapshot_CFLAGS = $(all_include_dirs)
fq_snapshot_LDADD = $(all_libraries) ./../lib/libfq.la
#
fq_view_SOURCES = fq_view.c
fq_view_CFLAGS = $(all_include_dirs)
fq_view_LDADD = $(all_libraries) ./../lib/libfq.la
#
EXTRA_INST = L4.conf LogCollector.conf LogAgent.conf FQ_server.conf LA.sh LC.sh L4.sh TCP_sync_client.sh TCP_sync_server.conf FQ_Protocol_cli_txt_get.sh FQ_Protocol_cli_txt_put.sh FQ_Protocol_svr.conf EQ.sh DQ.sh log_files.list mv_file_to_fq.conf test.dat fqm_queue.list perftest_C.sh perftest_jni.sh fqm_queue.list
EXTRA_DIST = L4.conf LogCollector.conf LogAgent.conf FQ_server.conf LA.sh LC.sh L4.sh TCP_sync_client.sh TCP_sync_server.conf FQ_Protocol_cli_txt_get.sh FQ_Protocol_cli_txt_put.sh FQ_Protocol_svr.conf EQ.sh DQ.sh log_files.list mv_file_to_fq.conf snapshot.cfg test.dat fqm_queue.list perftest_C.sh perftest_jni.sh fqm_shm_queue.list
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/utl/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/utl/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

FQ_Protocol_cli_txt$(EXEEXT): $(FQ_Protocol_cli_txt_OBJECTS) $(FQ_Protocol_cli_txt_DEPENDENCIES) $(EXTRA_FQ_Protocol_cli_txt_DEPENDENCIES) 
	@rm -f FQ_Protocol_cli_txt$(EXEEXT)
	$(AM_V_CCLD)$(FQ_Protocol_cli_txt_LINK) $(FQ_Protocol_cli_txt_OBJECTS) $(FQ_Protocol_cli_txt_LDADD) $(LIBS)

FQ_Protocol_svr$(EXEEXT): $(FQ_Protocol_svr_OBJECTS) $(FQ_Protocol_svr_DEPENDENCIES) $(EXTRA_FQ_Protocol_svr_DEPENDENCIES) 
	@rm -f FQ_Protocol_svr$(EXEEXT)
	$(AM_V_CCLD)$(FQ_Protocol_svr_LINK) $(FQ_Protocol_svr_OBJECTS) $(FQ_Protocol_svr_LDADD) $(LIBS)

FQ_server$(EXEEXT): $(FQ_server_OBJECTS) $(FQ_server_DEPENDENCIES) $(EXTRA_FQ_server_DEPENDENCIES) 
	@rm -f FQ_server$(EXEEXT)
	$(AM_V_CCLD)$(FQ_server_LINK) $(FQ_server_OBJECTS) $(FQ_server_LDADD) $(LIBS)

FatalNotifier$(EXEEXT): $(FatalNotifier_OBJECTS) $(FatalNotifier_DEPENDENCIES) $(EXTRA_FatalNotifier_DEPENDENCIES) 
	@rm -f FatalNotifier$(EXEEXT)
	$(AM_V_CCLD)$(FatalNotifier_LINK) $(FatalNotifier_OBJECTS) $(FatalNotifier_LDADD) $(LIBS)

GenQinfo$(EXEEXT): $(GenQinfo_OBJECTS) $(GenQinfo_DEPENDENCIES) $(EXTRA_GenQinfo_DEPENDENCIES) 
	@rm -f GenQinfo$(EXEEXT)
	$(AM_V_CCLD)$(GenQinfo_LINK) $(GenQinfo_OBJECTS) $(GenQinfo_LDADD) $(LIBS)

L4_listener$(EXEEXT): $(L4_listener_OBJECTS) $(L4_listener_DEPENDENCIES) $(EXTRA_L4_listener_DEPENDENCIES) 
	@rm -f L4_listener$(EXEEXT)
	$(AM_V_CCLD)$(L4_listener_LINK) $(L4_listener_OBJECTS) $(L4_listener_LDADD) $(LIBS)

LogAgent$(EXEEXT): $(LogAgent_OBJECTS) $(LogAgent_DEPENDENCIES) $(EXTRA_LogAgent_DEPENDENCIES) 
	@rm -f LogAgent$(EXEEXT)
	$(AM_V_CCLD)$(LogAgent_LINK) $(LogAgent_OBJECTS) $(LogAgent_LDADD) $(LIBS)

LogCollector$(EXEEXT): $(LogCollector_OBJECTS) $(LogCollector_DEPENDENCIES) $(EXTRA_LogCollector_DEPENDENCIES) 
	@rm -f LogCollector$(EXEEXT)
	$(AM_V_CCLD)$(LogCollector_LINK) $(LogCollector_OBJECTS) $(LogCollector_LDADD) $(LIBS)

LogNotifier$(EXEEXT): $(LogNotifier_OBJECTS) $(LogNotifier_DEPENDENCIES) $(EXTRA_LogNotifier_DEPENDENCIES) 
	@rm -f LogNotifier$(EXEEXT)
	$(AM_V_CCLD)$(LogNotifier_LINK) $(LogNotifier_OBJECTS) $(LogNotifier_LDADD) $(LIBS)

MakeTestData$(EXEEXT): $(MakeTestData_OBJECTS) $(MakeTestData_DEPENDENCIES) $(EXTRA_MakeTestData_DEPENDENCIES) 
	@rm -f MakeTestData$(EXEEXT)
	$(AM_V_CCLD)$(MakeTestData_LINK) $(MakeTestData_OBJECTS) $(MakeTestData_LDADD) $(LIBS)

ManageFQ$(EXEEXT): $(ManageFQ_OBJECTS) $(ManageFQ_DEPENDENCIES) $(EXTRA_ManageFQ_DEPENDENCIES) 
	@rm -f ManageFQ$(EXEEXT)
	$(AM_V_CCLD)$(ManageFQ_LINK) $(ManageFQ_OBJECTS) $(ManageFQ_LDADD) $(LIBS)

ManageHashMap$(EXEEXT): $(ManageHashMap_OBJECTS) $(ManageHashMap_DEPENDENCIES) $(EXTRA_ManageHashMap_DEPENDENCIES) 
	@rm -f ManageHashMap$(EXEEXT)
	$(AM_V_CCLD)$(ManageHashMap_LINK) $(ManageHashMap_OBJECTS) $(ManageHashMap_LDADD) $(LIBS)

ManageSHMQ$(EXEEXT): $(ManageSHMQ_OBJECTS) $(ManageSHMQ_DEPENDENCIES) $(EXTRA_ManageSHMQ_DEPENDENCIES) 
	@rm -f ManageSHMQ$(EXEEXT)
	$(AM_V_CCLD)$(ManageSHMQ_LINK) $(ManageSHMQ_OBJECTS) $(ManageSHMQ_LDADD) $(LIBS)

SetMaster$(EXEEXT): $(SetMaster_OBJECTS) $(SetMaster_DEPENDENCIES) $(EXTRA_SetMaster_DEPENDENCIES) 
	@rm -f SetMaster$(EXEEXT)
	$(AM_V_CCLD)$(SetMaster_LINK) $(SetMaster_OBJECTS) $(SetMaster_LDADD) $(LIBS)

SetQueueHeader$(EXEEXT): $(SetQueueHeader_OBJECTS) $(SetQueueHeader_DEPENDENCIES) $(EXTRA_SetQueueHeader_DEPENDENCIES) 
	@rm -f SetQueueHeader$(EXEEXT)
	$(AM_V_CCLD)$(SetQueueHeader_LINK) $(SetQueueHeader_OBJECTS) $(SetQueueHeader_LDADD) $(LIBS)

TCP_sync_client$(EXEEXT): $(TCP_sync_client_OBJECTS) $(TCP_sync_client_DEPENDENCIES) $(EXTRA_TCP_sync_client_DEPENDENCIES) 
	@rm -f TCP_sync_client$(EXEEXT)
	$(AM_V_CCLD)$(TCP_sync_client_LINK) $(TCP_sync_client_OBJECTS) $(TCP_sync_client_LDADD) $(LIBS)

TCP_sync_server$(EXEEXT): $(TCP_sync_server_OBJECTS) $(TCP_sync_server_DEPENDENCIES) $(EXTRA_TCP_sync_server_DEPENDENCIES) 
	@rm -f TCP_sync_server$(EXEEXT)
	$(AM_V_CCLD)$(TCP_sync_server_LINK) $(TCP_sync_server_OBJECTS) $(TCP_sync_server_LDADD) $(LIBS)

TestFQ$(EXEEXT): $(TestFQ_OBJECTS) $(TestFQ_DEPENDENCIES) $(EXTRA_TestFQ_DEPENDENCIES) 
	@rm -f TestFQ$(EXEEXT)
	$(AM_V_CCLD)$(TestFQ_LINK) $(TestFQ_OBJECTS) $(TestFQ_LDADD) $(LIBS)

TestSQ$(EXEEXT): $(TestSQ_OBJECTS) $(TestSQ_DEPENDENCIES) $(EXTRA_TestSQ_DEPENDENCIES) 
	@rm -f TestSQ$(EXEEXT)
	$(AM_V_CCLD)$(TestSQ_LINK) $(TestSQ_OBJECTS) $(TestSQ_LDADD) $(LIBS)

create_hash_map$(EXEEXT): $(create_hash_map_OBJECTS) $(create_hash_map_DEPENDENCIES) $(EXTRA_create_hash_map_DEPENDENCIES) 
	@rm -f create_hash_map$(EXEEXT)
	$(AM_V_CCLD)$(create_hash_map_LINK) $(create_hash_map_OBJECTS) $(create_hash_map_LDADD) $(LIBS)

deFQ_XA$(EXEEXT): $(deFQ_XA_OBJECTS) $(deFQ_XA_DEPENDENCIES) $(EXTRA_deFQ_XA_DEPENDENCIES) 
	@rm -f deFQ_XA$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_XA_LINK) $(deFQ_XA_OBJECTS) $(deFQ_XA_LDADD) $(LIBS)

deFQ_XA_thread$(EXEEXT): $(deFQ_XA_thread_OBJECTS) $(deFQ_XA_thread_DEPENDENCIES) $(EXTRA_deFQ_XA_thread_DEPENDENCIES) 
	@rm -f deFQ_XA_thread$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_XA_thread_LINK) $(deFQ_XA_thread_OBJECTS) $(deFQ_XA_thread_LDADD) $(LIBS)

deFQ_batch$(EXEEXT): $(deFQ_batch_OBJECTS) $(deFQ_batch_DEPENDENCIES) $(EXTRA_deFQ_batch_DEPENDENCIES) 
	@rm -f deFQ_batch$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_batch_LINK) $(deFQ_batch_OBJECTS) $(deFQ_batch_LDADD) $(LIBS)

deFQ_bundle$(EXEEXT): $(deFQ_bundle_OBJECTS) $(deFQ_bundle_DEPENDENCIES) $(EXTRA_deFQ_bundle_DEPENDENCIES) 
	@rm -f deFQ_bundle$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_bundle_LINK) $(deFQ_bundle_OBJECTS) $(deFQ_bundle_LDADD) $(LIBS)

deFQ_thread$(EXEEXT): $(deFQ_thread_OBJECTS) $(deFQ_thread_DEPENDENCIES) $(EXTRA_deFQ_thread_DEPENDENCIES) 
	@rm -f deFQ_thread$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_thread_LINK) $(deFQ_thread_OBJECTS) $(deFQ_thread_LDADD) $(LIBS)

deFQ_utl$(EXEEXT): $(deFQ_utl_OBJECTS) $(deFQ_utl_DEPENDENCIES) $(EXTRA_deFQ_utl_DEPENDENCIES) 
	@rm -f deFQ_utl$(EXEEXT)
	$(AM_V_CCLD)$(deFQ_utl_LINK) $(deFQ_utl_OBJECTS) $(deFQ_utl_LDADD) $(LIBS)

deQ_XA_enQ$(EXEEXT): $(deQ_XA_enQ_OBJECTS) $(deQ_XA_enQ_DEPENDENCIES) $(EXTRA_deQ_XA_enQ_DEPENDENCIES) 
	@rm -f deQ_XA_enQ$(EXEEXT)
	$(AM_V_CCLD)$(deQ_XA_enQ_LINK) $(deQ_XA_enQ_OBJECTS) $(deQ_XA_enQ_LDADD) $(LIBS)

enFQ_datafile$(EXEEXT): $(enFQ_datafile_OBJECTS) $(enFQ_datafile_DEPENDENCIES) $(EXTRA_enFQ_datafile_DEPENDENCIES) 
	@rm -f enFQ_datafile$(EXEEXT)
	$(AM_V_CCLD)$(enFQ_datafile_LINK) $(enFQ_datafile_OBJECTS) $(enFQ_datafile_LDADD) $(LIBS)

enFQ_thread$(EXEEXT): $(enFQ_thread_OBJECTS) $(enFQ_thread_DEPENDENCIES) $(EXTRA_enFQ_thread_DEPENDENCIES) 
	@rm -f enFQ_thread$(EXEEXT)
	$(AM_V_CCLD)$(enFQ_thread_LINK) $(enFQ_thread_OBJECTS) $(enFQ_thread_LDADD) $(LIBS)

enFQ_utl$(EXEEXT): $(enFQ_utl_OBJECTS) $(enFQ_utl_DEPENDENCIES) $(EXTRA_enFQ_utl_DEPENDENCIES) 
	@rm -f enFQ_utl$(EXEEXT)
	$(AM_V_CCLD)$(enFQ_utl_LINK) $(enFQ_utl_OBJECTS) $(enFQ_utl_LDADD) $(LIBS)

fq_snapshot$(EXEEXT): $(fq_snapshot_OBJECTS) $(fq_snapshot_DEPENDENCIES) $(EXTRA_fq_snapshot_DEPENDENCIES) 
	@rm -f fq_snapshot$(EXEEXT)
	$(AM_V_CCLD)$(fq_snapshot_LINK) $(fq_snapshot_OBJECTS) $(fq_snapshot_LDADD) $(LIBS)

fq_view$(EXEEXT): $(fq_view_OBJECTS) $(fq_view_DEPENDENCIES) $(EXTRA_fq_view_DEPENDENCIES) 
	@rm -f fq_view$(EXEEXT)
	$(AM_V_CCLD)$(fq_view_LINK) $(fq_view_OBJECTS) $(fq_view_LDADD) $(LIBS)

fqm$(EXEEXT): $(fqm_OBJECTS) $(fqm_DEPENDENCIES) $(EXTRA_fqm_DEPENDENCIES) 
	@rm -f fqm$(EXEEXT)
	$(AM_V_CCLD)$(fqm_LINK) $(fqm_OBJECTS) $(fqm_LDADD) $(LIBS)

lock_perfermance_TPS$(EXEEXT): $(lock_perfermance_TPS_OBJECTS) $(lock_perfermance_TPS_DEPENDENCIES) $(EXTRA_lock_perfermance_TPS_DEPENDENCIES) 
	@rm -f lock_perfermance_TPS$(EXEEXT)
	$(AM_V_CCLD)$(lock_perfermance_TPS_LINK) $(lock_perfermance_TPS_OBJECTS) $(lock_perfermance_TPS_LDADD) $(LIBS)

mem_queue_test$(EXEEXT): $(mem_queue_test_OBJECTS) $(mem_queue_test_DEPENDENCIES) $(EXTRA_mem_queue_test_DEPENDENCIES) 
	@rm -f mem_queue_test$(EXEEXT)
	$(AM_V_CCLD)$(mem_queue_test_LINK) $(mem_queue_test_OBJECTS) $(mem_queue_test_LDADD) $(LIBS)

mv_file_b_to_fq$(EXEEXT): $(mv_file_b_to_fq_OBJECTS) $(mv_file_b_to_fq_DEPENDENCIES) $(EXTRA_mv_file_b_to_fq_DEPENDENCIES) 
	@rm -f mv_file_b_to_fq$(EXEEXT)
	$(AM_V_CCLD)$(mv_file_b_to_fq_LINK) $(mv_file_b_to_fq_OBJECTS) $(mv_file_b_to_fq_LDADD) $(LIBS)

mv_file_b_to_fq_multi$(EXEEXT): $(mv_file_b_to_fq_multi_OBJECTS) $(mv_file_b_to_fq_multi_DEPENDENCIES) $(EXTRA_mv_file_b_to_fq_multi_DEPENDENCIES) 
	@rm -f mv_file_b_to_fq_multi$(EXEEXT)
	$(AM_V_CCLD)$(mv_file_b_to_fq_multi_LINK) $(mv_file_b_to_fq_multi_OBJECTS) $(mv_file_b_to_fq_multi_LDADD) $(LIBS)

mv_file_to_fq$(EXEEXT): $(mv_file_to_fq_OBJECTS) $(mv_file_to_fq_DEPENDENCIES) $(EXTRA_mv_file_to_fq_DEPENDENCIES) 
	@rm -f mv_file_to_fq$(EXEEXT)
	$(AM_V_CCLD)$(mv_file_to_fq_LINK) $(mv_file_to_fq_OBJECTS) $(mv_file_to_fq_LDADD) $(LIBS)

net_text_qt$(EXEEXT): $(net_text_qt_OBJECTS) $(net_text_qt_DEPENDENCIES) $(EXTRA_net_text_qt_DEPENDENCIES) 
	@rm -f net_text_qt$(EXEEXT)
	$(AM_V_CCLD)$(net_text_qt_LINK) $(net_text_qt_OBJECTS) $(net_text_qt_LDADD) $(LIBS)

qvf$(EXEEXT): $(qvf_OBJECTS) $(qvf_DEPENDENCIES) $(EXTRA_qvf_DEPENDENCIES) 
	@rm -f qvf$(EXEEXT)
	$(AM_V_CCLD)$(qvf_LINK) $(qvf_OBJECTS) $(qvf_LDADD) $(LIBS)

qvf_all$(EXEEXT): $(qvf_all_OBJECTS) $(qvf_all_DEPENDENCIES) $(EXTRA_qvf_all_DEPENDENCIES) 
	@rm -f qvf_all$(EXEEXT)
	$(AM_V_CCLD)$(qvf_all_LINK) $(qvf_all_OBJECTS) $(qvf_all_LDADD) $(LIBS)

relay_FQ$(EXEEXT): $(relay_FQ_OBJECTS) $(relay_FQ_DEPENDENCIES) $(EXTRA_relay_FQ_DEPENDENCIES) 
	@rm -f relay_FQ$(EXEEXT)
	$(AM_V_CCLD)$(relay_FQ_LINK) $(relay_FQ_OBJECTS) $(relay_FQ_LDADD) $(LIBS)

retrieveMon$(EXEEXT): $(retrieveMon_OBJECTS) $(retrieveMon_DEPENDENCIES) $(EXTRA_retrieveMon_DEPENDENCIES) 
	@rm -f retrieveMon$(EXEEXT)
	$(AM_V_CCLD)$(retrieveMon_LINK) $(retrieveMon_OBJECTS) $(retrieveMon_LDADD) $(LIBS)

unlink_hash_map$(EXEEXT): $(unlink_hash_map_OBJECTS) $(unlink_hash_map_DEPENDENCIES) $(EXTRA_unlink_hash_map_DEPENDENCIES) 
	@rm -f unlink_hash_map$(EXEEXT)
	$(AM_V_CCLD)$(unlink_hash_map_LINK) $(unlink_hash_map_OBJECTS) $(unlink_hash_map_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po # am--include-marker
include ./$(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po # am--include-marker
include ./$(DEPDIR)/FQ_server-FQ_server.Po # am--include-marker
include ./$(DEPDIR)/FatalNotifier-FatalNotifier.Po # am--include-marker
include ./$(DEPDIR)/GenQinfo-GenQinfo.Po # am--include-marker
include ./$(DEPDIR)/L4_listener-L4_listener.Po # am--include-marker
include ./$(DEPDIR)/LogAgent-LogAgent.Po # am--include-marker
include ./$(DEPDIR)/LogCollector-LogCollector.Po # am--include-marker
include ./$(DEPDIR)/LogNotifier-LogNotifier.Po # am--include-marker
include ./$(DEPDIR)/MakeTestData-MakeTestData.Po # am--include-marker
include ./$(DEPDIR)/ManageFQ-ManageFQ.Po # am--include-marker
include ./$(DEPDIR)/ManageHashMap-ManageHashMap.Po # am--include-marker
include ./$(DEPDIR)/ManageSHMQ-ManageSHMQ.Po # am--include-marker
include ./$(DEPDIR)/SetMaster-SetMaster.Po # am--include-marker
include ./$(DEPDIR)/SetQueueHeader-SetQueueHeader.Po # am--include-marker
include ./$(DEPDIR)/TCP_sync_client-TCP_sync_client.Po # am--include-marker
include ./$(DEPDIR)/TCP_sync_server-TCP_sync_server.Po # am--include-marker
include ./$(DEPDIR)/TestFQ-TestFQ.Po # am--include-marker
include ./$(DEPDIR)/TestSQ-TestSQ.Po # am--include-marker
include ./$(DEPDIR)/create_hash_map-create_hash_map.Po # am--include-marker
include ./$(DEPDIR)/deFQ_XA-deFQ_XA.Po # am--include-marker
include ./$(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po # am--include-marker
include ./$(DEPDIR)/deFQ_batch-deFQ_batch.Po # am--include-marker
include ./$(DEPDIR)/deFQ_bundle-deFQ_bundle.Po # am--include-marker
include ./$(DEPDIR)/deFQ_thread-deFQ_thread.Po # am--include-marker
include ./$(DEPDIR)/deFQ_utl-deFQ_utl.Po # am--include-marker
include ./$(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po # am--include-marker
include ./$(DEPDIR)/enFQ_datafile-enFQ_datafile.Po # am--include-marker
include ./$(DEPDIR)/enFQ_thread-enFQ_thread.Po # am--include-marker
include ./$(DEPDIR)/enFQ_utl-enFQ_utl.Po # am--include-marker
include ./$(DEPDIR)/fq_snapshot-fq_snapshot.Po # am--include-marker
include ./$(DEPDIR)/fq_view-fq_view.Po # am--include-marker
include ./$(DEPDIR)/fqm-fqm.Po # am--include-marker
include ./$(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po # am--include-marker
include ./$(DEPDIR)/mem_queue_test-mem_queue_test.Po # am--include-marker
include ./$(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po # am--include-marker
include ./$(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po # am--include-marker
include ./$(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po # am--include-marker
include ./$(DEPDIR)/net_text_qt-net_text_qt.Po # am--include-marker
include ./$(DEPDIR)/qvf-qvf.Po # am--include-marker
include ./$(DEPDIR)/qvf_all-qvf_all.Po # am--include-marker
include ./$(DEPDIR)/relay_FQ-relay_FQ.Po # am--include-marker
include ./$(DEPDIR)/retrieveMon-retrieveMon.Po # am--include-marker
include ./$(DEPDIR)/unlink_hash_map-unlink_hash_map.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.o: FQ_Protocol_cli_txt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_cli_txt_CFLAGS) $(CFLAGS) -MT FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.o -MD -MP -MF $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Tpo -c -o FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.o `test -f 'FQ_Protocol_cli_txt.c' || echo '$(srcdir)/'`FQ_Protocol_cli_txt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Tpo $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po
#	$(AM_V_CC)source='FQ_Protocol_cli_txt.c' object='FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_cli_txt_CFLAGS) $(CFLAGS) -c -o FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.o `test -f 'FQ_Protocol_cli_txt.c' || echo '$(srcdir)/'`FQ_Protocol_cli_txt.c

FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.obj: FQ_Protocol_cli_txt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_cli_txt_CFLAGS) $(CFLAGS) -MT FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.obj -MD -MP -MF $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Tpo -c -o FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.obj `if test -f 'FQ_Protocol_cli_txt.c'; then $(CYGPATH_W) 'FQ_Protocol_cli_txt.c'; else $(CYGPATH_W) '$(srcdir)/FQ_Protocol_cli_txt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Tpo $(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po
#	$(AM_V_CC)source='FQ_Protocol_cli_txt.c' object='FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_cli_txt_CFLAGS) $(CFLAGS) -c -o FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.obj `if test -f 'FQ_Protocol_cli_txt.c'; then $(CYGPATH_W) 'FQ_Protocol_cli_txt.c'; else $(CYGPATH_W) '$(srcdir)/FQ_Protocol_cli_txt.c'; fi`

FQ_Protocol_svr-FQ_Protocol_svr.o: FQ_Protocol_svr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_svr_CFLAGS) $(CFLAGS) -MT FQ_Protocol_svr-FQ_Protocol_svr.o -MD -MP -MF $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Tpo -c -o FQ_Protocol_svr-FQ_Protocol_svr.o `test -f 'FQ_Protocol_svr.c' || echo '$(srcdir)/'`FQ_Protocol_svr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Tpo $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po
#	$(AM_V_CC)source='FQ_Protocol_svr.c' object='FQ_Protocol_svr-FQ_Protocol_svr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_svr_CFLAGS) $(CFLAGS) -c -o FQ_Protocol_svr-FQ_Protocol_svr.o `test -f 'FQ_Protocol_svr.c' || echo '$(srcdir)/'`FQ_Protocol_svr.c

FQ_Protocol_svr-FQ_Protocol_svr.obj: FQ_Protocol_svr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_svr_CFLAGS) $(CFLAGS) -MT FQ_Protocol_svr-FQ_Protocol_svr.obj -MD -MP -MF $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Tpo -c -o FQ_Protocol_svr-FQ_Protocol_svr.obj `if test -f 'FQ_Protocol_svr.c'; then $(CYGPATH_W) 'FQ_Protocol_svr.c'; else $(CYGPATH_W) '$(srcdir)/FQ_Protocol_svr.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Tpo $(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po
#	$(AM_V_CC)source='FQ_Protocol_svr.c' object='FQ_Protocol_svr-FQ_Protocol_svr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_Protocol_svr_CFLAGS) $(CFLAGS) -c -o FQ_Protocol_svr-FQ_Protocol_svr.obj `if test -f 'FQ_Protocol_svr.c'; then $(CYGPATH_W) 'FQ_Protocol_svr.c'; else $(CYGPATH_W) '$(srcdir)/FQ_Protocol_svr.c'; fi`

FQ_server-FQ_server.o: FQ_server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_server_CFLAGS) $(CFLAGS) -MT FQ_server-FQ_server.o -MD -MP -MF $(DEPDIR)/FQ_server-FQ_server.Tpo -c -o FQ_server-FQ_server.o `test -f 'FQ_server.c' || echo '$(srcdir)/'`FQ_server.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_server-FQ_server.Tpo $(DEPDIR)/FQ_server-FQ_server.Po
#	$(AM_V_CC)source='FQ_server.c' object='FQ_server-FQ_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_server_CFLAGS) $(CFLAGS) -c -o FQ_server-FQ_server.o `test -f 'FQ_server.c' || echo '$(srcdir)/'`FQ_server.c

FQ_server-FQ_server.obj: FQ_server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_server_CFLAGS) $(CFLAGS) -MT FQ_server-FQ_server.obj -MD -MP -MF $(DEPDIR)/FQ_server-FQ_server.Tpo -c -o FQ_server-FQ_server.obj `if test -f 'FQ_server.c'; then $(CYGPATH_W) 'FQ_server.c'; else $(CYGPATH_W) '$(srcdir)/FQ_server.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FQ_server-FQ_server.Tpo $(DEPDIR)/FQ_server-FQ_server.Po
#	$(AM_V_CC)source='FQ_server.c' object='FQ_server-FQ_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FQ_server_CFLAGS) $(CFLAGS) -c -o FQ_server-FQ_server.obj `if test -f 'FQ_server.c'; then $(CYGPATH_W) 'FQ_server.c'; else $(CYGPATH_W) '$(srcdir)/FQ_server.c'; fi`

FatalNotifier-FatalNotifier.o: FatalNotifier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FatalNotifier_CFLAGS) $(CFLAGS) -MT FatalNotifier-FatalNotifier.o -MD -MP -MF $(DEPDIR)/FatalNotifier-FatalNotifier.Tpo -c -o FatalNotifier-FatalNotifier.o `test -f 'FatalNotifier.c' || echo '$(srcdir)/'`FatalNotifier.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/FatalNotifier-FatalNotifier.Tpo $(DEPDIR)/FatalNotifier-FatalNotifier.Po
#	$(AM_V_CC)source='FatalNotifier.c' object='FatalNotifier-FatalNotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FatalNotifier_CFLAGS) $(CFLAGS) -c -o FatalNotifier-FatalNotifier.o `test -f 'FatalNotifier.c' || echo '$(srcdir)/'`FatalNotifier.c

FatalNotifier-FatalNotifier.obj: FatalNotifier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FatalNotifier_CFLAGS) $(CFLAGS) -MT FatalNotifier-FatalNotifier.obj -MD -MP -MF $(DEPDIR)/FatalNotifier-FatalNotifier.Tpo -c -o FatalNotifier-FatalNotifier.obj `if test -f 'FatalNotifier.c'; then $(CYGPATH_W) 'FatalNotifier.c'; else $(CYGPATH_W) '$(srcdir)/FatalNotifier.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FatalNotifier-FatalNotifier.Tpo $(DEPDIR)/FatalNotifier-FatalNotifier.Po
#	$(AM_V_CC)source='FatalNotifier.c' object='FatalNotifier-FatalNotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(FatalNotifier_CFLAGS) $(CFLAGS) -c -o FatalNotifier-FatalNotifier.obj `if test -f 'FatalNotifier.c'; then $(CYGPATH_W) 'FatalNotifier.c'; else $(CYGPATH_W) '$(srcdir)/FatalNotifier.c'; fi`

GenQinfo-GenQinfo.o: GenQinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(GenQinfo_CFLAGS) $(CFLAGS) -MT GenQinfo-GenQinfo.o -MD -MP -MF $(DEPDIR)/GenQinfo-GenQinfo.Tpo -c -o GenQinfo-GenQinfo.o `test -f 'GenQinfo.c' || echo '$(srcdir)/'`GenQinfo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/GenQinfo-GenQinfo.Tpo $(DEPDIR)/GenQinfo-GenQinfo.Po
#	$(AM_V_CC)source='GenQinfo.c' object='GenQinfo-GenQinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(GenQinfo_CFLAGS) $(CFLAGS) -c -o GenQinfo-GenQinfo.o `test -f 'GenQinfo.c' || echo '$(srcdir)/'`GenQinfo.c

GenQinfo-GenQinfo.obj: GenQinfo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(GenQinfo_CFLAGS) $(CFLAGS) -MT GenQinfo-GenQinfo.obj -MD -MP -MF $(DEPDIR)/GenQinfo-GenQinfo.Tpo -c -o GenQinfo-GenQinfo.obj `if test -f 'GenQinfo.c'; then $(CYGPATH_W) 'GenQinfo.c'; else $(CYGPATH_W) '$(srcdir)/GenQinfo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/GenQinfo-GenQinfo.Tpo $(DEPDIR)/GenQinfo-GenQinfo.Po
#	$(AM_V_CC)source='GenQinfo.c' object='GenQinfo-GenQinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(GenQinfo_CFLAGS) $(CFLAGS) -c -o GenQinfo-GenQinfo.obj `if test -f 'GenQinfo.c'; then $(CYGPATH_W) 'GenQinfo.c'; else $(CYGPATH_W) '$(srcdir)/GenQinfo.c'; fi`

L4_listener-L4_listener.o: L4_listener.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(L4_listener_CFLAGS) $(CFLAGS) -MT L4_listener-L4_listener.o -MD -MP -MF $(DEPDIR)/L4_listener-L4_listener.Tpo -c -o L4_listener-L4_listener.o `test -f 'L4_listener.c' || echo '$(srcdir)/'`L4_listener.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/L4_listener-L4_listener.Tpo $(DEPDIR)/L4_listener-L4_listener.Po
#	$(AM_V_CC)source='L4_listener.c' object='L4_listener-L4_listener.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(L4_listener_CFLAGS) $(CFLAGS) -c -o L4_listener-L4_listener.o `test -f 'L4_listener.c' || echo '$(srcdir)/'`L4_listener.c

L4_listener-L4_listener.obj: L4_listener.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(L4_listener_CFLAGS) $(CFLAGS) -MT L4_listener-L4_listener.obj -MD -MP -MF $(DEPDIR)/L4_listener-L4_listener.Tpo -c -o L4_listener-L4_listener.obj `if test -f 'L4_listener.c'; then $(CYGPATH_W) 'L4_listener.c'; else $(CYGPATH_W) '$(srcdir)/L4_listener.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/L4_listener-L4_listener.Tpo $(DEPDIR)/L4_listener-L4_listener.Po
#	$(AM_V_CC)source='L4_listener.c' object='L4_listener-L4_listener.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(L4_listener_CFLAGS) $(CFLAGS) -c -o L4_listener-L4_listener.obj `if test -f 'L4_listener.c'; then $(CYGPATH_W) 'L4_listener.c'; else $(CYGPATH_W) '$(srcdir)/L4_listener.c'; fi`

LogAgent-LogAgent.o: LogAgent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogAgent_CFLAGS) $(CFLAGS) -MT LogAgent-LogAgent.o -MD -MP -MF $(DEPDIR)/LogAgent-LogAgent.Tpo -c -o LogAgent-LogAgent.o `test -f 'LogAgent.c' || echo '$(srcdir)/'`LogAgent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogAgent-LogAgent.Tpo $(DEPDIR)/LogAgent-LogAgent.Po
#	$(AM_V_CC)source='LogAgent.c' object='LogAgent-LogAgent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogAgent_CFLAGS) $(CFLAGS) -c -o LogAgent-LogAgent.o `test -f 'LogAgent.c' || echo '$(srcdir)/'`LogAgent.c

LogAgent-LogAgent.obj: LogAgent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogAgent_CFLAGS) $(CFLAGS) -MT LogAgent-LogAgent.obj -MD -MP -MF $(DEPDIR)/LogAgent-LogAgent.Tpo -c -o LogAgent-LogAgent.obj `if test -f 'LogAgent.c'; then $(CYGPATH_W) 'LogAgent.c'; else $(CYGPATH_W) '$(srcdir)/LogAgent.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogAgent-LogAgent.Tpo $(DEPDIR)/LogAgent-LogAgent.Po
#	$(AM_V_CC)source='LogAgent.c' object='LogAgent-LogAgent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogAgent_CFLAGS) $(CFLAGS) -c -o LogAgent-LogAgent.obj `if test -f 'LogAgent.c'; then $(CYGPATH_W) 'LogAgent.c'; else $(CYGPATH_W) '$(srcdir)/LogAgent.c'; fi`

LogCollector-LogCollector.o: LogCollector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogCollector_CFLAGS) $(CFLAGS) -MT LogCollector-LogCollector.o -MD -MP -MF $(DEPDIR)/LogCollector-LogCollector.Tpo -c -o LogCollector-LogCollector.o `test -f 'LogCollector.c' || echo '$(srcdir)/'`LogCollector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogCollector-LogCollector.Tpo $(DEPDIR)/LogCollector-LogCollector.Po
#	$(AM_V_CC)source='LogCollector.c' object='LogCollector-LogCollector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogCollector_CFLAGS) $(CFLAGS) -c -o LogCollector-LogCollector.o `test -f 'LogCollector.c' || echo '$(srcdir)/'`LogCollector.c

LogCollector-LogCollector.obj: LogCollector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogCollector_CFLAGS) $(CFLAGS) -MT LogCollector-LogCollector.obj -MD -MP -MF $(DEPDIR)/LogCollector-LogCollector.Tpo -c -o LogCollector-LogCollector.obj `if test -f 'LogCollector.c'; then $(CYGPATH_W) 'LogCollector.c'; else $(CYGPATH_W) '$(srcdir)/LogCollector.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogCollector-LogCollector.Tpo $(DEPDIR)/LogCollector-LogCollector.Po
#	$(AM_V_CC)source='LogCollector.c' object='LogCollector-LogCollector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogCollector_CFLAGS) $(CFLAGS) -c -o LogCollector-LogCollector.obj `if test -f 'LogCollector.c'; then $(CYGPATH_W) 'LogCollector.c'; else $(CYGPATH_W) '$(srcdir)/LogCollector.c'; fi`

LogNotifier-LogNotifier.o: LogNotifier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogNotifier_CFLAGS) $(CFLAGS) -MT LogNotifier-LogNotifier.o -MD -MP -MF $(DEPDIR)/LogNotifier-LogNotifier.Tpo -c -o LogNotifier-LogNotifier.o `test -f 'LogNotifier.c' || echo '$(srcdir)/'`LogNotifier.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogNotifier-LogNotifier.Tpo $(DEPDIR)/LogNotifier-LogNotifier.Po
#	$(AM_V_CC)source='LogNotifier.c' object='LogNotifier-LogNotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogNotifier_CFLAGS) $(CFLAGS) -c -o LogNotifier-LogNotifier.o `test -f 'LogNotifier.c' || echo '$(srcdir)/'`LogNotifier.c

LogNotifier-LogNotifier.obj: LogNotifier.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogNotifier_CFLAGS) $(CFLAGS) -MT LogNotifier-LogNotifier.obj -MD -MP -MF $(DEPDIR)/LogNotifier-LogNotifier.Tpo -c -o LogNotifier-LogNotifier.obj `if test -f 'LogNotifier.c'; then $(CYGPATH_W) 'LogNotifier.c'; else $(CYGPATH_W) '$(srcdir)/LogNotifier.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/LogNotifier-LogNotifier.Tpo $(DEPDIR)/LogNotifier-LogNotifier.Po
#	$(AM_V_CC)source='LogNotifier.c' object='LogNotifier-LogNotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LogNotifier_CFLAGS) $(CFLAGS) -c -o LogNotifier-LogNotifier.obj `if test -f 'LogNotifier.c'; then $(CYGPATH_W) 'LogNotifier.c'; else $(CYGPATH_W) '$(srcdir)/LogNotifier.c'; fi`

MakeTestData-MakeTestData.o: MakeTestData.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MakeTestData_CFLAGS) $(CFLAGS) -MT MakeTestData-MakeTestData.o -MD -MP -MF $(DEPDIR)/MakeTestData-MakeTestData.Tpo -c -o MakeTestData-MakeTestData.o `test -f 'MakeTestData.c' || echo '$(srcdir)/'`MakeTestData.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/MakeTestData-MakeTestData.Tpo $(DEPDIR)/MakeTestData-MakeTestData.Po
#	$(AM_V_CC)source='MakeTestData.c' object='MakeTestData-MakeTestData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MakeTestData_CFLAGS) $(CFLAGS) -c -o MakeTestData-MakeTestData.o `test -f 'MakeTestData.c' || echo '$(srcdir)/'`MakeTestData.c

MakeTestData-MakeTestData.obj: MakeTestData.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MakeTestData_CFLAGS) $(CFLAGS) -MT MakeTestData-MakeTestData.obj -MD -MP -MF $(DEPDIR)/MakeTestData-MakeTestData.Tpo -c -o MakeTestData-MakeTestData.obj `if test -f 'MakeTestData.c'; then $(CYGPATH_W) 'MakeTestData.c'; else $(CYGPATH_W) '$(srcdir)/MakeTestData.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MakeTestData-MakeTestData.Tpo $(DEPDIR)/MakeTestData-MakeTestData.Po
#	$(AM_V_CC)source='MakeTestData.c' object='MakeTestData-MakeTestData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(MakeTestData_CFLAGS) $(CFLAGS) -c -o MakeTestData-MakeTestData.obj `if test -f 'MakeTestData.c'; then $(CYGPATH_W) 'MakeTestData.c'; else $(CYGPATH_W) '$(srcdir)/MakeTestData.c'; fi`

ManageFQ-ManageFQ.o: ManageFQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageFQ_CFLAGS) $(CFLAGS) -MT ManageFQ-ManageFQ.o -MD -MP -MF $(DEPDIR)/ManageFQ-ManageFQ.Tpo -c -o ManageFQ-ManageFQ.o `test -f 'ManageFQ.c' || echo '$(srcdir)/'`ManageFQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageFQ-ManageFQ.Tpo $(DEPDIR)/ManageFQ-ManageFQ.Po
#	$(AM_V_CC)source='ManageFQ.c' object='ManageFQ-ManageFQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageFQ_CFLAGS) $(CFLAGS) -c -o ManageFQ-ManageFQ.o `test -f 'ManageFQ.c' || echo '$(srcdir)/'`ManageFQ.c

ManageFQ-ManageFQ.obj: ManageFQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageFQ_CFLAGS) $(CFLAGS) -MT ManageFQ-ManageFQ.obj -MD -MP -MF $(DEPDIR)/ManageFQ-ManageFQ.Tpo -c -o ManageFQ-ManageFQ.obj `if test -f 'ManageFQ.c'; then $(CYGPATH_W) 'ManageFQ.c'; else $(CYGPATH_W) '$(srcdir)/ManageFQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageFQ-ManageFQ.Tpo $(DEPDIR)/ManageFQ-ManageFQ.Po
#	$(AM_V_CC)source='ManageFQ.c' object='ManageFQ-ManageFQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageFQ_CFLAGS) $(CFLAGS) -c -o ManageFQ-ManageFQ.obj `if test -f 'ManageFQ.c'; then $(CYGPATH_W) 'ManageFQ.c'; else $(CYGPATH_W) '$(srcdir)/ManageFQ.c'; fi`

ManageHashMap-ManageHashMap.o: ManageHashMap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageHashMap_CFLAGS) $(CFLAGS) -MT ManageHashMap-ManageHashMap.o -MD -MP -MF $(DEPDIR)/ManageHashMap-ManageHashMap.Tpo -c -o ManageHashMap-ManageHashMap.o `test -f 'ManageHashMap.c' || echo '$(srcdir)/'`ManageHashMap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageHashMap-ManageHashMap.Tpo $(DEPDIR)/ManageHashMap-ManageHashMap.Po
#	$(AM_V_CC)source='ManageHashMap.c' object='ManageHashMap-ManageHashMap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageHashMap_CFLAGS) $(CFLAGS) -c -o ManageHashMap-ManageHashMap.o `test -f 'ManageHashMap.c' || echo '$(srcdir)/'`ManageHashMap.c

ManageHashMap-ManageHashMap.obj: ManageHashMap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageHashMap_CFLAGS) $(CFLAGS) -MT ManageHashMap-ManageHashMap.obj -MD -MP -MF $(DEPDIR)/ManageHashMap-ManageHashMap.Tpo -c -o ManageHashMap-ManageHashMap.obj `if test -f 'ManageHashMap.c'; then $(CYGPATH_W) 'ManageHashMap.c'; else $(CYGPATH_W) '$(srcdir)/ManageHashMap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageHashMap-ManageHashMap.Tpo $(DEPDIR)/ManageHashMap-ManageHashMap.Po
#	$(AM_V_CC)source='ManageHashMap.c' object='ManageHashMap-ManageHashMap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageHashMap_CFLAGS) $(CFLAGS) -c -o ManageHashMap-ManageHashMap.obj `if test -f 'ManageHashMap.c'; then $(CYGPATH_W) 'ManageHashMap.c'; else $(CYGPATH_W) '$(srcdir)/ManageHashMap.c'; fi`

ManageSHMQ-ManageSHMQ.o: ManageSHMQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageSHMQ_CFLAGS) $(CFLAGS) -MT ManageSHMQ-ManageSHMQ.o -MD -MP -MF $(DEPDIR)/ManageSHMQ-ManageSHMQ.Tpo -c -o ManageSHMQ-ManageSHMQ.o `test -f 'ManageSHMQ.c' || echo '$(srcdir)/'`ManageSHMQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageSHMQ-ManageSHMQ.Tpo $(DEPDIR)/ManageSHMQ-ManageSHMQ.Po
#	$(AM_V_CC)source='ManageSHMQ.c' object='ManageSHMQ-ManageSHMQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageSHMQ_CFLAGS) $(CFLAGS) -c -o ManageSHMQ-ManageSHMQ.o `test -f 'ManageSHMQ.c' || echo '$(srcdir)/'`ManageSHMQ.c

ManageSHMQ-ManageSHMQ.obj: ManageSHMQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageSHMQ_CFLAGS) $(CFLAGS) -MT ManageSHMQ-ManageSHMQ.obj -MD -MP -MF $(DEPDIR)/ManageSHMQ-ManageSHMQ.Tpo -c -o ManageSHMQ-ManageSHMQ.obj `if test -f 'ManageSHMQ.c'; then $(CYGPATH_W) 'ManageSHMQ.c'; else $(CYGPATH_W) '$(srcdir)/ManageSHMQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ManageSHMQ-ManageSHMQ.Tpo $(DEPDIR)/ManageSHMQ-ManageSHMQ.Po
#	$(AM_V_CC)source='ManageSHMQ.c' object='ManageSHMQ-ManageSHMQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ManageSHMQ_CFLAGS) $(CFLAGS) -c -o ManageSHMQ-ManageSHMQ.obj `if test -f 'ManageSHMQ.c'; then $(CYGPATH_W) 'ManageSHMQ.c'; else $(CYGPATH_W) '$(srcdir)/ManageSHMQ.c'; fi`

SetMaster-SetMaster.o: SetMaster.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetMaster_CFLAGS) $(CFLAGS) -MT SetMaster-SetMaster.o -MD -MP -MF $(DEPDIR)/SetMaster-SetMaster.Tpo -c -o SetMaster-SetMaster.o `test -f 'SetMaster.c' || echo '$(srcdir)/'`SetMaster.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/SetMaster-SetMaster.Tpo $(DEPDIR)/SetMaster-SetMaster.Po
#	$(AM_V_CC)source='SetMaster.c' object='SetMaster-SetMaster.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetMaster_CFLAGS) $(CFLAGS) -c -o SetMaster-SetMaster.o `test -f 'SetMaster.c' || echo '$(srcdir)/'`SetMaster.c

SetMaster-SetMaster.obj: SetMaster.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetMaster_CFLAGS) $(CFLAGS) -MT SetMaster-SetMaster.obj -MD -MP -MF $(DEPDIR)/SetMaster-SetMaster.Tpo -c -o SetMaster-SetMaster.obj `if test -f 'SetMaster.c'; then $(CYGPATH_W) 'SetMaster.c'; else $(CYGPATH_W) '$(srcdir)/SetMaster.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/SetMaster-SetMaster.Tpo $(DEPDIR)/SetMaster-SetMaster.Po
#	$(AM_V_CC)source='SetMaster.c' object='SetMaster-SetMaster.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetMaster_CFLAGS) $(CFLAGS) -c -o SetMaster-SetMaster.obj `if test -f 'SetMaster.c'; then $(CYGPATH_W) 'SetMaster.c'; else $(CYGPATH_W) '$(srcdir)/SetMaster.c'; fi`

SetQueueHeader-SetQueueHeader.o: SetQueueHeader.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetQueueHeader_CFLAGS) $(CFLAGS) -MT SetQueueHeader-SetQueueHeader.o -MD -MP -MF $(DEPDIR)/SetQueueHeader-SetQueueHeader.Tpo -c -o SetQueueHeader-SetQueueHeader.o `test -f 'SetQueueHeader.c' || echo '$(srcdir)/'`SetQueueHeader.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/SetQueueHeader-SetQueueHeader.Tpo $(DEPDIR)/SetQueueHeader-SetQueueHeader.Po
#	$(AM_V_CC)source='SetQueueHeader.c' object='SetQueueHeader-SetQueueHeader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetQueueHeader_CFLAGS) $(CFLAGS) -c -o SetQueueHeader-SetQueueHeader.o `test -f 'SetQueueHeader.c' || echo '$(srcdir)/'`SetQueueHeader.c

SetQueueHeader-SetQueueHeader.obj: SetQueueHeader.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetQueueHeader_CFLAGS) $(CFLAGS) -MT SetQueueHeader-SetQueueHeader.obj -MD -MP -MF $(DEPDIR)/SetQueueHeader-SetQueueHeader.Tpo -c -o SetQueueHeader-SetQueueHeader.obj `if test -f 'SetQueueHeader.c'; then $(CYGPATH_W) 'SetQueueHeader.c'; else $(CYGPATH_W) '$(srcdir)/SetQueueHeader.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/SetQueueHeader-SetQueueHeader.Tpo $(DEPDIR)/SetQueueHeader-SetQueueHeader.Po
#	$(AM_V_CC)source='SetQueueHeader.c' object='SetQueueHeader-SetQueueHeader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(SetQueueHeader_CFLAGS) $(CFLAGS) -c -o SetQueueHeader-SetQueueHeader.obj `if test -f 'SetQueueHeader.c'; then $(CYGPATH_W) 'SetQueueHeader.c'; else $(CYGPATH_W) '$(srcdir)/SetQueueHeader.c'; fi`

TCP_sync_client-TCP_sync_client.o: TCP_sync_client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_client_CFLAGS) $(CFLAGS) -MT TCP_sync_client-TCP_sync_client.o -MD -MP -MF $(DEPDIR)/TCP_sync_client-TCP_sync_client.Tpo -c -o TCP_sync_client-TCP_sync_client.o `test -f 'TCP_sync_client.c' || echo '$(srcdir)/'`TCP_sync_client.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/TCP_sync_client-TCP_sync_client.Tpo $(DEPDIR)/TCP_sync_client-TCP_sync_client.Po
#	$(AM_V_CC)source='TCP_sync_client.c' object='TCP_sync_client-TCP_sync_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_client_CFLAGS) $(CFLAGS) -c -o TCP_sync_client-TCP_sync_client.o `test -f 'TCP_sync_client.c' || echo '$(srcdir)/'`TCP_sync_client.c

TCP_sync_client-TCP_sync_client.obj: TCP_sync_client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_client_CFLAGS) $(CFLAGS) -MT TCP_sync_client-TCP_sync_client.obj -MD -MP -MF $(DEPDIR)/TCP_sync_client-TCP_sync_client.Tpo -c -o TCP_sync_client-TCP_sync_client.obj `if test -f 'TCP_sync_client.c'; then $(CYGPATH_W) 'TCP_sync_client.c'; else $(CYGPATH_W) '$(srcdir)/TCP_sync_client.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TCP_sync_client-TCP_sync_client.Tpo $(DEPDIR)/TCP_sync_client-TCP_sync_client.Po
#	$(AM_V_CC)source='TCP_sync_client.c' object='TCP_sync_client-TCP_sync_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_client_CFLAGS) $(CFLAGS) -c -o TCP_sync_client-TCP_sync_client.obj `if test -f 'TCP_sync_client.c'; then $(CYGPATH_W) 'TCP_sync_client.c'; else $(CYGPATH_W) '$(srcdir)/TCP_sync_client.c'; fi`

TCP_sync_server-TCP_sync_server.o: TCP_sync_server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_server_CFLAGS) $(CFLAGS) -MT TCP_sync_server-TCP_sync_server.o -MD -MP -MF $(DEPDIR)/TCP_sync_server-TCP_sync_server.Tpo -c -o TCP_sync_server-TCP_sync_server.o `test -f 'TCP_sync_server.c' || echo '$(srcdir)/'`TCP_sync_server.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/TCP_sync_server-TCP_sync_server.Tpo $(DEPDIR)/TCP_sync_server-TCP_sync_server.Po
#	$(AM_V_CC)source='TCP_sync_server.c' object='TCP_sync_server-TCP_sync_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_server_CFLAGS) $(CFLAGS) -c -o TCP_sync_server-TCP_sync_server.o `test -f 'TCP_sync_server.c' || echo '$(srcdir)/'`TCP_sync_server.c

TCP_sync_server-TCP_sync_server.obj: TCP_sync_server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_server_CFLAGS) $(CFLAGS) -MT TCP_sync_server-TCP_sync_server.obj -MD -MP -MF $(DEPDIR)/TCP_sync_server-TCP_sync_server.Tpo -c -o TCP_sync_server-TCP_sync_server.obj `if test -f 'TCP_sync_server.c'; then $(CYGPATH_W) 'TCP_sync_server.c'; else $(CYGPATH_W) '$(srcdir)/TCP_sync_server.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TCP_sync_server-TCP_sync_server.Tpo $(DEPDIR)/TCP_sync_server-TCP_sync_server.Po
#	$(AM_V_CC)source='TCP_sync_server.c' object='TCP_sync_server-TCP_sync_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TCP_sync_server_CFLAGS) $(CFLAGS) -c -o TCP_sync_server-TCP_sync_server.obj `if test -f 'TCP_sync_server.c'; then $(CYGPATH_W) 'TCP_sync_server.c'; else $(CYGPATH_W) '$(srcdir)/TCP_sync_server.c'; fi`

TestFQ-TestFQ.o: TestFQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestFQ_CFLAGS) $(CFLAGS) -MT TestFQ-TestFQ.o -MD -MP -MF $(DEPDIR)/TestFQ-TestFQ.Tpo -c -o TestFQ-TestFQ.o `test -f 'TestFQ.c' || echo '$(srcdir)/'`TestFQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/TestFQ-TestFQ.Tpo $(DEPDIR)/TestFQ-TestFQ.Po
#	$(AM_V_CC)source='TestFQ.c' object='TestFQ-TestFQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestFQ_CFLAGS) $(CFLAGS) -c -o TestFQ-TestFQ.o `test -f 'TestFQ.c' || echo '$(srcdir)/'`TestFQ.c

TestFQ-TestFQ.obj: TestFQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestFQ_CFLAGS) $(CFLAGS) -MT TestFQ-TestFQ.obj -MD -MP -MF $(DEPDIR)/TestFQ-TestFQ.Tpo -c -o TestFQ-TestFQ.obj `if test -f 'TestFQ.c'; then $(CYGPATH_W) 'TestFQ.c'; else $(CYGPATH_W) '$(srcdir)/TestFQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TestFQ-TestFQ.Tpo $(DEPDIR)/TestFQ-TestFQ.Po
#	$(AM_V_CC)source='TestFQ.c' object='TestFQ-TestFQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestFQ_CFLAGS) $(CFLAGS) -c -o TestFQ-TestFQ.obj `if test -f 'TestFQ.c'; then $(CYGPATH_W) 'TestFQ.c'; else $(CYGPATH_W) '$(srcdir)/TestFQ.c'; fi`

TestSQ-TestSQ.o: TestSQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestSQ_CFLAGS) $(CFLAGS) -MT TestSQ-TestSQ.o -MD -MP -MF $(DEPDIR)/TestSQ-TestSQ.Tpo -c -o TestSQ-TestSQ.o `test -f 'TestSQ.c' || echo '$(srcdir)/'`TestSQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/TestSQ-TestSQ.Tpo $(DEPDIR)/TestSQ-TestSQ.Po
#	$(AM_V_CC)source='TestSQ.c' object='TestSQ-TestSQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestSQ_CFLAGS) $(CFLAGS) -c -o TestSQ-TestSQ.o `test -f 'TestSQ.c' || echo '$(srcdir)/'`TestSQ.c

TestSQ-TestSQ.obj: TestSQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestSQ_CFLAGS) $(CFLAGS) -MT TestSQ-TestSQ.obj -MD -MP -MF $(DEPDIR)/TestSQ-TestSQ.Tpo -c -o TestSQ-TestSQ.obj `if test -f 'TestSQ.c'; then $(CYGPATH_W) 'TestSQ.c'; else $(CYGPATH_W) '$(srcdir)/TestSQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TestSQ-TestSQ.Tpo $(DEPDIR)/TestSQ-TestSQ.Po
#	$(AM_V_CC)source='TestSQ.c' object='TestSQ-TestSQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TestSQ_CFLAGS) $(CFLAGS) -c -o TestSQ-TestSQ.obj `if test -f 'TestSQ.c'; then $(CYGPATH_W) 'TestSQ.c'; else $(CYGPATH_W) '$(srcdir)/TestSQ.c'; fi`

create_hash_map-create_hash_map.o: create_hash_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_hash_map_CFLAGS) $(CFLAGS) -MT create_hash_map-create_hash_map.o -MD -MP -MF $(DEPDIR)/create_hash_map-create_hash_map.Tpo -c -o create_hash_map-create_hash_map.o `test -f 'create_hash_map.c' || echo '$(srcdir)/'`create_hash_map.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/create_hash_map-create_hash_map.Tpo $(DEPDIR)/create_hash_map-create_hash_map.Po
#	$(AM_V_CC)source='create_hash_map.c' object='create_hash_map-create_hash_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_hash_map_CFLAGS) $(CFLAGS) -c -o create_hash_map-create_hash_map.o `test -f 'create_hash_map.c' || echo '$(srcdir)/'`create_hash_map.c

create_hash_map-create_hash_map.obj: create_hash_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_hash_map_CFLAGS) $(CFLAGS) -MT create_hash_map-create_hash_map.obj -MD -MP -MF $(DEPDIR)/create_hash_map-create_hash_map.Tpo -c -o create_hash_map-create_hash_map.obj `if test -f 'create_hash_map.c'; then $(CYGPATH_W) 'create_hash_map.c'; else $(CYGPATH_W) '$(srcdir)/create_hash_map.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/create_hash_map-create_hash_map.Tpo $(DEPDIR)/create_hash_map-create_hash_map.Po
#	$(AM_V_CC)source='create_hash_map.c' object='create_hash_map-create_hash_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(create_hash_map_CFLAGS) $(CFLAGS) -c -o create_hash_map-create_hash_map.obj `if test -f 'create_hash_map.c'; then $(CYGPATH_W) 'create_hash_map.c'; else $(CYGPATH_W) '$(srcdir)/create_hash_map.c'; fi`

deFQ_XA-deFQ_XA.o: deFQ_XA.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_CFLAGS) $(CFLAGS) -MT deFQ_XA-deFQ_XA.o -MD -MP -MF $(DEPDIR)/deFQ_XA-deFQ_XA.Tpo -c -o deFQ_XA-deFQ_XA.o `test -f 'deFQ_XA.c' || echo '$(srcdir)/'`deFQ_XA.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_XA-deFQ_XA.Tpo $(DEPDIR)/deFQ_XA-deFQ_XA.Po
#	$(AM_V_CC)source='deFQ_XA.c' object='deFQ_XA-deFQ_XA.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_CFLAGS) $(CFLAGS) -c -o deFQ_XA-deFQ_XA.o `test -f 'deFQ_XA.c' || echo '$(srcdir)/'`deFQ_XA.c

deFQ_XA-deFQ_XA.obj: deFQ_XA.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_CFLAGS) $(CFLAGS) -MT deFQ_XA-deFQ_XA.obj -MD -MP -MF $(DEPDIR)/deFQ_XA-deFQ_XA.Tpo -c -o deFQ_XA-deFQ_XA.obj `if test -f 'deFQ_XA.c'; then $(CYGPATH_W) 'deFQ_XA.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_XA.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_XA-deFQ_XA.Tpo $(DEPDIR)/deFQ_XA-deFQ_XA.Po
#	$(AM_V_CC)source='deFQ_XA.c' object='deFQ_XA-deFQ_XA.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_CFLAGS) $(CFLAGS) -c -o deFQ_XA-deFQ_XA.obj `if test -f 'deFQ_XA.c'; then $(CYGPATH_W) 'deFQ_XA.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_XA.c'; fi`

deFQ_XA_thread-deFQ_XA_thread.o: deFQ_XA_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_thread_CFLAGS) $(CFLAGS) -MT deFQ_XA_thread-deFQ_XA_thread.o -MD -MP -MF $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Tpo -c -o deFQ_XA_thread-deFQ_XA_thread.o `test -f 'deFQ_XA_thread.c' || echo '$(srcdir)/'`deFQ_XA_thread.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Tpo $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po
#	$(AM_V_CC)source='deFQ_XA_thread.c' object='deFQ_XA_thread-deFQ_XA_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_thread_CFLAGS) $(CFLAGS) -c -o deFQ_XA_thread-deFQ_XA_thread.o `test -f 'deFQ_XA_thread.c' || echo '$(srcdir)/'`deFQ_XA_thread.c

deFQ_XA_thread-deFQ_XA_thread.obj: deFQ_XA_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_thread_CFLAGS) $(CFLAGS) -MT deFQ_XA_thread-deFQ_XA_thread.obj -MD -MP -MF $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Tpo -c -o deFQ_XA_thread-deFQ_XA_thread.obj `if test -f 'deFQ_XA_thread.c'; then $(CYGPATH_W) 'deFQ_XA_thread.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_XA_thread.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Tpo $(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po
#	$(AM_V_CC)source='deFQ_XA_thread.c' object='deFQ_XA_thread-deFQ_XA_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_XA_thread_CFLAGS) $(CFLAGS) -c -o deFQ_XA_thread-deFQ_XA_thread.obj `if test -f 'deFQ_XA_thread.c'; then $(CYGPATH_W) 'deFQ_XA_thread.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_XA_thread.c'; fi`

deFQ_batch-deFQ_batch.o: deFQ_batch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_batch_CFLAGS) $(CFLAGS) -MT deFQ_batch-deFQ_batch.o -MD -MP -MF $(DEPDIR)/deFQ_batch-deFQ_batch.Tpo -c -o deFQ_batch-deFQ_batch.o `test -f 'deFQ_batch.c' || echo '$(srcdir)/'`deFQ_batch.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_batch-deFQ_batch.Tpo $(DEPDIR)/deFQ_batch-deFQ_batch.Po
#	$(AM_V_CC)source='deFQ_batch.c' object='deFQ_batch-deFQ_batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_batch_CFLAGS) $(CFLAGS) -c -o deFQ_batch-deFQ_batch.o `test -f 'deFQ_batch.c' || echo '$(srcdir)/'`deFQ_batch.c

deFQ_batch-deFQ_batch.obj: deFQ_batch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_batch_CFLAGS) $(CFLAGS) -MT deFQ_batch-deFQ_batch.obj -MD -MP -MF $(DEPDIR)/deFQ_batch-deFQ_batch.Tpo -c -o deFQ_batch-deFQ_batch.obj `if test -f 'deFQ_batch.c'; then $(CYGPATH_W) 'deFQ_batch.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_batch.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_batch-deFQ_batch.Tpo $(DEPDIR)/deFQ_batch-deFQ_batch.Po
#	$(AM_V_CC)source='deFQ_batch.c' object='deFQ_batch-deFQ_batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_batch_CFLAGS) $(CFLAGS) -c -o deFQ_batch-deFQ_batch.obj `if test -f 'deFQ_batch.c'; then $(CYGPATH_W) 'deFQ_batch.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_batch.c'; fi`

deFQ_bundle-deFQ_bundle.o: deFQ_bundle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_bundle_CFLAGS) $(CFLAGS) -MT deFQ_bundle-deFQ_bundle.o -MD -MP -MF $(DEPDIR)/deFQ_bundle-deFQ_bundle.Tpo -c -o deFQ_bundle-deFQ_bundle.o `test -f 'deFQ_bundle.c' || echo '$(srcdir)/'`deFQ_bundle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_bundle-deFQ_bundle.Tpo $(DEPDIR)/deFQ_bundle-deFQ_bundle.Po
#	$(AM_V_CC)source='deFQ_bundle.c' object='deFQ_bundle-deFQ_bundle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_bundle_CFLAGS) $(CFLAGS) -c -o deFQ_bundle-deFQ_bundle.o `test -f 'deFQ_bundle.c' || echo '$(srcdir)/'`deFQ_bundle.c

deFQ_bundle-deFQ_bundle.obj: deFQ_bundle.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_bundle_CFLAGS) $(CFLAGS) -MT deFQ_bundle-deFQ_bundle.obj -MD -MP -MF $(DEPDIR)/deFQ_bundle-deFQ_bundle.Tpo -c -o deFQ_bundle-deFQ_bundle.obj `if test -f 'deFQ_bundle.c'; then $(CYGPATH_W) 'deFQ_bundle.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_bundle.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_bundle-deFQ_bundle.Tpo $(DEPDIR)/deFQ_bundle-deFQ_bundle.Po
#	$(AM_V_CC)source='deFQ_bundle.c' object='deFQ_bundle-deFQ_bundle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_bundle_CFLAGS) $(CFLAGS) -c -o deFQ_bundle-deFQ_bundle.obj `if test -f 'deFQ_bundle.c'; then $(CYGPATH_W) 'deFQ_bundle.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_bundle.c'; fi`

deFQ_thread-deFQ_thread.o: deFQ_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_thread_CFLAGS) $(CFLAGS) -MT deFQ_thread-deFQ_thread.o -MD -MP -MF $(DEPDIR)/deFQ_thread-deFQ_thread.Tpo -c -o deFQ_thread-deFQ_thread.o `test -f 'deFQ_thread.c' || echo '$(srcdir)/'`deFQ_thread.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_thread-deFQ_thread.Tpo $(DEPDIR)/deFQ_thread-deFQ_thread.Po
#	$(AM_V_CC)source='deFQ_thread.c' object='deFQ_thread-deFQ_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_thread_CFLAGS) $(CFLAGS) -c -o deFQ_thread-deFQ_thread.o `test -f 'deFQ_thread.c' || echo '$(srcdir)/'`deFQ_thread.c

deFQ_thread-deFQ_thread.obj: deFQ_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_thread_CFLAGS) $(CFLAGS) -MT deFQ_thread-deFQ_thread.obj -MD -MP -MF $(DEPDIR)/deFQ_thread-deFQ_thread.Tpo -c -o deFQ_thread-deFQ_thread.obj `if test -f 'deFQ_thread.c'; then $(CYGPATH_W) 'deFQ_thread.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_thread.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_thread-deFQ_thread.Tpo $(DEPDIR)/deFQ_thread-deFQ_thread.Po
#	$(AM_V_CC)source='deFQ_thread.c' object='deFQ_thread-deFQ_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_thread_CFLAGS) $(CFLAGS) -c -o deFQ_thread-deFQ_thread.obj `if test -f 'deFQ_thread.c'; then $(CYGPATH_W) 'deFQ_thread.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_thread.c'; fi`

deFQ_utl-deFQ_utl.o: deFQ_utl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_utl_CFLAGS) $(CFLAGS) -MT deFQ_utl-deFQ_utl.o -MD -MP -MF $(DEPDIR)/deFQ_utl-deFQ_utl.Tpo -c -o deFQ_utl-deFQ_utl.o `test -f 'deFQ_utl.c' || echo '$(srcdir)/'`deFQ_utl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_utl-deFQ_utl.Tpo $(DEPDIR)/deFQ_utl-deFQ_utl.Po
#	$(AM_V_CC)source='deFQ_utl.c' object='deFQ_utl-deFQ_utl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_utl_CFLAGS) $(CFLAGS) -c -o deFQ_utl-deFQ_utl.o `test -f 'deFQ_utl.c' || echo '$(srcdir)/'`deFQ_utl.c

deFQ_utl-deFQ_utl.obj: deFQ_utl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_utl_CFLAGS) $(CFLAGS) -MT deFQ_utl-deFQ_utl.obj -MD -MP -MF $(DEPDIR)/deFQ_utl-deFQ_utl.Tpo -c -o deFQ_utl-deFQ_utl.obj `if test -f 'deFQ_utl.c'; then $(CYGPATH_W) 'deFQ_utl.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_utl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deFQ_utl-deFQ_utl.Tpo $(DEPDIR)/deFQ_utl-deFQ_utl.Po
#	$(AM_V_CC)source='deFQ_utl.c' object='deFQ_utl-deFQ_utl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deFQ_utl_CFLAGS) $(CFLAGS) -c -o deFQ_utl-deFQ_utl.obj `if test -f 'deFQ_utl.c'; then $(CYGPATH_W) 'deFQ_utl.c'; else $(CYGPATH_W) '$(srcdir)/deFQ_utl.c'; fi`

deQ_XA_enQ-deQ_XA_enQ.o: deQ_XA_enQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deQ_XA_enQ_CFLAGS) $(CFLAGS) -MT deQ_XA_enQ-deQ_XA_enQ.o -MD -MP -MF $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Tpo -c -o deQ_XA_enQ-deQ_XA_enQ.o `test -f 'deQ_XA_enQ.c' || echo '$(srcdir)/'`deQ_XA_enQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Tpo $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po
#	$(AM_V_CC)source='deQ_XA_enQ.c' object='deQ_XA_enQ-deQ_XA_enQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deQ_XA_enQ_CFLAGS) $(CFLAGS) -c -o deQ_XA_enQ-deQ_XA_enQ.o `test -f 'deQ_XA_enQ.c' || echo '$(srcdir)/'`deQ_XA_enQ.c

deQ_XA_enQ-deQ_XA_enQ.obj: deQ_XA_enQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deQ_XA_enQ_CFLAGS) $(CFLAGS) -MT deQ_XA_enQ-deQ_XA_enQ.obj -MD -MP -MF $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Tpo -c -o deQ_XA_enQ-deQ_XA_enQ.obj `if test -f 'deQ_XA_enQ.c'; then $(CYGPATH_W) 'deQ_XA_enQ.c'; else $(CYGPATH_W) '$(srcdir)/deQ_XA_enQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Tpo $(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po
#	$(AM_V_CC)source='deQ_XA_enQ.c' object='deQ_XA_enQ-deQ_XA_enQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(deQ_XA_enQ_CFLAGS) $(CFLAGS) -c -o deQ_XA_enQ-deQ_XA_enQ.obj `if test -f 'deQ_XA_enQ.c'; then $(CYGPATH_W) 'deQ_XA_enQ.c'; else $(CYGPATH_W) '$(srcdir)/deQ_XA_enQ.c'; fi`

enFQ_datafile-enFQ_datafile.o: enFQ_datafile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_datafile_CFLAGS) $(CFLAGS) -MT enFQ_datafile-enFQ_datafile.o -MD -MP -MF $(DEPDIR)/enFQ_datafile-enFQ_datafile.Tpo -c -o enFQ_datafile-enFQ_datafile.o `test -f 'enFQ_datafile.c' || echo '$(srcdir)/'`enFQ_datafile.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_datafile-enFQ_datafile.Tpo $(DEPDIR)/enFQ_datafile-enFQ_datafile.Po
#	$(AM_V_CC)source='enFQ_datafile.c' object='enFQ_datafile-enFQ_datafile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_datafile_CFLAGS) $(CFLAGS) -c -o enFQ_datafile-enFQ_datafile.o `test -f 'enFQ_datafile.c' || echo '$(srcdir)/'`enFQ_datafile.c

enFQ_datafile-enFQ_datafile.obj: enFQ_datafile.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_datafile_CFLAGS) $(CFLAGS) -MT enFQ_datafile-enFQ_datafile.obj -MD -MP -MF $(DEPDIR)/enFQ_datafile-enFQ_datafile.Tpo -c -o enFQ_datafile-enFQ_datafile.obj `if test -f 'enFQ_datafile.c'; then $(CYGPATH_W) 'enFQ_datafile.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_datafile.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_datafile-enFQ_datafile.Tpo $(DEPDIR)/enFQ_datafile-enFQ_datafile.Po
#	$(AM_V_CC)source='enFQ_datafile.c' object='enFQ_datafile-enFQ_datafile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_datafile_CFLAGS) $(CFLAGS) -c -o enFQ_datafile-enFQ_datafile.obj `if test -f 'enFQ_datafile.c'; then $(CYGPATH_W) 'enFQ_datafile.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_datafile.c'; fi`

enFQ_thread-enFQ_thread.o: enFQ_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_thread_CFLAGS) $(CFLAGS) -MT enFQ_thread-enFQ_thread.o -MD -MP -MF $(DEPDIR)/enFQ_thread-enFQ_thread.Tpo -c -o enFQ_thread-enFQ_thread.o `test -f 'enFQ_thread.c' || echo '$(srcdir)/'`enFQ_thread.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_thread-enFQ_thread.Tpo $(DEPDIR)/enFQ_thread-enFQ_thread.Po
#	$(AM_V_CC)source='enFQ_thread.c' object='enFQ_thread-enFQ_thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_thread_CFLAGS) $(CFLAGS) -c -o enFQ_thread-enFQ_thread.o `test -f 'enFQ_thread.c' || echo '$(srcdir)/'`enFQ_thread.c

enFQ_thread-enFQ_thread.obj: enFQ_thread.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_thread_CFLAGS) $(CFLAGS) -MT enFQ_thread-enFQ_thread.obj -MD -MP -MF $(DEPDIR)/enFQ_thread-enFQ_thread.Tpo -c -o enFQ_thread-enFQ_thread.obj `if test -f 'enFQ_thread.c'; then $(CYGPATH_W) 'enFQ_thread.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_thread.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_thread-enFQ_thread.Tpo $(DEPDIR)/enFQ_thread-enFQ_thread.Po
#	$(AM_V_CC)source='enFQ_thread.c' object='enFQ_thread-enFQ_thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_thread_CFLAGS) $(CFLAGS) -c -o enFQ_thread-enFQ_thread.obj `if test -f 'enFQ_thread.c'; then $(CYGPATH_W) 'enFQ_thread.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_thread.c'; fi`

enFQ_utl-enFQ_utl.o: enFQ_utl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_utl_CFLAGS) $(CFLAGS) -MT enFQ_utl-enFQ_utl.o -MD -MP -MF $(DEPDIR)/enFQ_utl-enFQ_utl.Tpo -c -o enFQ_utl-enFQ_utl.o `test -f 'enFQ_utl.c' || echo '$(srcdir)/'`enFQ_utl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_utl-enFQ_utl.Tpo $(DEPDIR)/enFQ_utl-enFQ_utl.Po
#	$(AM_V_CC)source='enFQ_utl.c' object='enFQ_utl-enFQ_utl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_utl_CFLAGS) $(CFLAGS) -c -o enFQ_utl-enFQ_utl.o `test -f 'enFQ_utl.c' || echo '$(srcdir)/'`enFQ_utl.c

enFQ_utl-enFQ_utl.obj: enFQ_utl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_utl_CFLAGS) $(CFLAGS) -MT enFQ_utl-enFQ_utl.obj -MD -MP -MF $(DEPDIR)/enFQ_utl-enFQ_utl.Tpo -c -o enFQ_utl-enFQ_utl.obj `if test -f 'enFQ_utl.c'; then $(CYGPATH_W) 'enFQ_utl.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_utl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/enFQ_utl-enFQ_utl.Tpo $(DEPDIR)/enFQ_utl-enFQ_utl.Po
#	$(AM_V_CC)source='enFQ_utl.c' object='enFQ_utl-enFQ_utl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(enFQ_utl_CFLAGS) $(CFLAGS) -c -o enFQ_utl-enFQ_utl.obj `if test -f 'enFQ_utl.c'; then $(CYGPATH_W) 'enFQ_utl.c'; else $(CYGPATH_W) '$(srcdir)/enFQ_utl.c'; fi`

fq_snapshot-fq_snapshot.o: fq_snapshot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_snapshot_CFLAGS) $(CFLAGS) -MT fq_snapshot-fq_snapshot.o -MD -MP -MF $(DEPDIR)/fq_snapshot-fq_snapshot.Tpo -c -o fq_snapshot-fq_snapshot.o `test -f 'fq_snapshot.c' || echo '$(srcdir)/'`fq_snapshot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fq_snapshot-fq_snapshot.Tpo $(DEPDIR)/fq_snapshot-fq_snapshot.Po
#	$(AM_V_CC)source='fq_snapshot.c' object='fq_snapshot-fq_snapshot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_snapshot_CFLAGS) $(CFLAGS) -c -o fq_snapshot-fq_snapshot.o `test -f 'fq_snapshot.c' || echo '$(srcdir)/'`fq_snapshot.c

fq_snapshot-fq_snapshot.obj: fq_snapshot.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_snapshot_CFLAGS) $(CFLAGS) -MT fq_snapshot-fq_snapshot.obj -MD -MP -MF $(DEPDIR)/fq_snapshot-fq_snapshot.Tpo -c -o fq_snapshot-fq_snapshot.obj `if test -f 'fq_snapshot.c'; then $(CYGPATH_W) 'fq_snapshot.c'; else $(CYGPATH_W) '$(srcdir)/fq_snapshot.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fq_snapshot-fq_snapshot.Tpo $(DEPDIR)/fq_snapshot-fq_snapshot.Po
#	$(AM_V_CC)source='fq_snapshot.c' object='fq_snapshot-fq_snapshot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_snapshot_CFLAGS) $(CFLAGS) -c -o fq_snapshot-fq_snapshot.obj `if test -f 'fq_snapshot.c'; then $(CYGPATH_W) 'fq_snapshot.c'; else $(CYGPATH_W) '$(srcdir)/fq_snapshot.c'; fi`

fq_view-fq_view.o: fq_view.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_view_CFLAGS) $(CFLAGS) -MT fq_view-fq_view.o -MD -MP -MF $(DEPDIR)/fq_view-fq_view.Tpo -c -o fq_view-fq_view.o `test -f 'fq_view.c' || echo '$(srcdir)/'`fq_view.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fq_view-fq_view.Tpo $(DEPDIR)/fq_view-fq_view.Po
#	$(AM_V_CC)source='fq_view.c' object='fq_view-fq_view.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_view_CFLAGS) $(CFLAGS) -c -o fq_view-fq_view.o `test -f 'fq_view.c' || echo '$(srcdir)/'`fq_view.c

fq_view-fq_view.obj: fq_view.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_view_CFLAGS) $(CFLAGS) -MT fq_view-fq_view.obj -MD -MP -MF $(DEPDIR)/fq_view-fq_view.Tpo -c -o fq_view-fq_view.obj `if test -f 'fq_view.c'; then $(CYGPATH_W) 'fq_view.c'; else $(CYGPATH_W) '$(srcdir)/fq_view.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fq_view-fq_view.Tpo $(DEPDIR)/fq_view-fq_view.Po
#	$(AM_V_CC)source='fq_view.c' object='fq_view-fq_view.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fq_view_CFLAGS) $(CFLAGS) -c -o fq_view-fq_view.obj `if test -f 'fq_view.c'; then $(CYGPATH_W) 'fq_view.c'; else $(CYGPATH_W) '$(srcdir)/fq_view.c'; fi`

fqm-fqm.o: fqm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fqm_CFLAGS) $(CFLAGS) -MT fqm-fqm.o -MD -MP -MF $(DEPDIR)/fqm-fqm.Tpo -c -o fqm-fqm.o `test -f 'fqm.c' || echo '$(srcdir)/'`fqm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fqm-fqm.Tpo $(DEPDIR)/fqm-fqm.Po
#	$(AM_V_CC)source='fqm.c' object='fqm-fqm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fqm_CFLAGS) $(CFLAGS) -c -o fqm-fqm.o `test -f 'fqm.c' || echo '$(srcdir)/'`fqm.c

fqm-fqm.obj: fqm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fqm_CFLAGS) $(CFLAGS) -MT fqm-fqm.obj -MD -MP -MF $(DEPDIR)/fqm-fqm.Tpo -c -o fqm-fqm.obj `if test -f 'fqm.c'; then $(CYGPATH_W) 'fqm.c'; else $(CYGPATH_W) '$(srcdir)/fqm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fqm-fqm.Tpo $(DEPDIR)/fqm-fqm.Po
#	$(AM_V_CC)source='fqm.c' object='fqm-fqm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(fqm_CFLAGS) $(CFLAGS) -c -o fqm-fqm.obj `if test -f 'fqm.c'; then $(CYGPATH_W) 'fqm.c'; else $(CYGPATH_W) '$(srcdir)/fqm.c'; fi`

lock_perfermance_TPS-lock_perfermance_TPS.o: lock_perfermance_TPS.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lock_perfermance_TPS_CFLAGS) $(CFLAGS) -MT lock_perfermance_TPS-lock_perfermance_TPS.o -MD -MP -MF $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Tpo -c -o lock_perfermance_TPS-lock_perfermance_TPS.o `test -f 'lock_perfermance_TPS.c' || echo '$(srcdir)/'`lock_perfermance_TPS.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Tpo $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po
#	$(AM_V_CC)source='lock_perfermance_TPS.c' object='lock_perfermance_TPS-lock_perfermance_TPS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lock_perfermance_TPS_CFLAGS) $(CFLAGS) -c -o lock_perfermance_TPS-lock_perfermance_TPS.o `test -f 'lock_perfermance_TPS.c' || echo '$(srcdir)/'`lock_perfermance_TPS.c

lock_perfermance_TPS-lock_perfermance_TPS.obj: lock_perfermance_TPS.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lock_perfermance_TPS_CFLAGS) $(CFLAGS) -MT lock_perfermance_TPS-lock_perfermance_TPS.obj -MD -MP -MF $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Tpo -c -o lock_perfermance_TPS-lock_perfermance_TPS.obj `if test -f 'lock_perfermance_TPS.c'; then $(CYGPATH_W) 'lock_perfermance_TPS.c'; else $(CYGPATH_W) '$(srcdir)/lock_perfermance_TPS.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Tpo $(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po
#	$(AM_V_CC)source='lock_perfermance_TPS.c' object='lock_perfermance_TPS-lock_perfermance_TPS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lock_perfermance_TPS_CFLAGS) $(CFLAGS) -c -o lock_perfermance_TPS-lock_perfermance_TPS.obj `if test -f 'lock_perfermance_TPS.c'; then $(CYGPATH_W) 'lock_perfermance_TPS.c'; else $(CYGPATH_W) '$(srcdir)/lock_perfermance_TPS.c'; fi`

mem_queue_test-mem_queue_test.o: mem_queue_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mem_queue_test_CFLAGS) $(CFLAGS) -MT mem_queue_test-mem_queue_test.o -MD -MP -MF $(DEPDIR)/mem_queue_test-mem_queue_test.Tpo -c -o mem_queue_test-mem_queue_test.o `test -f 'mem_queue_test.c' || echo '$(srcdir)/'`mem_queue_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mem_queue_test-mem_queue_test.Tpo $(DEPDIR)/mem_queue_test-mem_queue_test.Po
#	$(AM_V_CC)source='mem_queue_test.c' object='mem_queue_test-mem_queue_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mem_queue_test_CFLAGS) $(CFLAGS) -c -o mem_queue_test-mem_queue_test.o `test -f 'mem_queue_test.c' || echo '$(srcdir)/'`mem_queue_test.c

mem_queue_test-mem_queue_test.obj: mem_queue_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mem_queue_test_CFLAGS) $(CFLAGS) -MT mem_queue_test-mem_queue_test.obj -MD -MP -MF $(DEPDIR)/mem_queue_test-mem_queue_test.Tpo -c -o mem_queue_test-mem_queue_test.obj `if test -f 'mem_queue_test.c'; then $(CYGPATH_W) 'mem_queue_test.c'; else $(CYGPATH_W) '$(srcdir)/mem_queue_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mem_queue_test-mem_queue_test.Tpo $(DEPDIR)/mem_queue_test-mem_queue_test.Po
#	$(AM_V_CC)source='mem_queue_test.c' object='mem_queue_test-mem_queue_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mem_queue_test_CFLAGS) $(CFLAGS) -c -o mem_queue_test-mem_queue_test.obj `if test -f 'mem_queue_test.c'; then $(CYGPATH_W) 'mem_queue_test.c'; else $(CYGPATH_W) '$(srcdir)/mem_queue_test.c'; fi`

mv_file_b_to_fq-mv_file_b_to_fq.o: mv_file_b_to_fq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_CFLAGS) $(CFLAGS) -MT mv_file_b_to_fq-mv_file_b_to_fq.o -MD -MP -MF $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Tpo -c -o mv_file_b_to_fq-mv_file_b_to_fq.o `test -f 'mv_file_b_to_fq.c' || echo '$(srcdir)/'`mv_file_b_to_fq.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Tpo $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po
#	$(AM_V_CC)source='mv_file_b_to_fq.c' object='mv_file_b_to_fq-mv_file_b_to_fq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_CFLAGS) $(CFLAGS) -c -o mv_file_b_to_fq-mv_file_b_to_fq.o `test -f 'mv_file_b_to_fq.c' || echo '$(srcdir)/'`mv_file_b_to_fq.c

mv_file_b_to_fq-mv_file_b_to_fq.obj: mv_file_b_to_fq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_CFLAGS) $(CFLAGS) -MT mv_file_b_to_fq-mv_file_b_to_fq.obj -MD -MP -MF $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Tpo -c -o mv_file_b_to_fq-mv_file_b_to_fq.obj `if test -f 'mv_file_b_to_fq.c'; then $(CYGPATH_W) 'mv_file_b_to_fq.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_b_to_fq.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Tpo $(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po
#	$(AM_V_CC)source='mv_file_b_to_fq.c' object='mv_file_b_to_fq-mv_file_b_to_fq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_CFLAGS) $(CFLAGS) -c -o mv_file_b_to_fq-mv_file_b_to_fq.obj `if test -f 'mv_file_b_to_fq.c'; then $(CYGPATH_W) 'mv_file_b_to_fq.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_b_to_fq.c'; fi`

mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.o: mv_file_b_to_fq_multi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_multi_CFLAGS) $(CFLAGS) -MT mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.o -MD -MP -MF $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Tpo -c -o mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.o `test -f 'mv_file_b_to_fq_multi.c' || echo '$(srcdir)/'`mv_file_b_to_fq_multi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Tpo $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po
#	$(AM_V_CC)source='mv_file_b_to_fq_multi.c' object='mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_multi_CFLAGS) $(CFLAGS) -c -o mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.o `test -f 'mv_file_b_to_fq_multi.c' || echo '$(srcdir)/'`mv_file_b_to_fq_multi.c

mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.obj: mv_file_b_to_fq_multi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_multi_CFLAGS) $(CFLAGS) -MT mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.obj -MD -MP -MF $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Tpo -c -o mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.obj `if test -f 'mv_file_b_to_fq_multi.c'; then $(CYGPATH_W) 'mv_file_b_to_fq_multi.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_b_to_fq_multi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Tpo $(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po
#	$(AM_V_CC)source='mv_file_b_to_fq_multi.c' object='mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_b_to_fq_multi_CFLAGS) $(CFLAGS) -c -o mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.obj `if test -f 'mv_file_b_to_fq_multi.c'; then $(CYGPATH_W) 'mv_file_b_to_fq_multi.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_b_to_fq_multi.c'; fi`

mv_file_to_fq-mv_file_to_fq.o: mv_file_to_fq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_to_fq_CFLAGS) $(CFLAGS) -MT mv_file_to_fq-mv_file_to_fq.o -MD -MP -MF $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Tpo -c -o mv_file_to_fq-mv_file_to_fq.o `test -f 'mv_file_to_fq.c' || echo '$(srcdir)/'`mv_file_to_fq.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Tpo $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po
#	$(AM_V_CC)source='mv_file_to_fq.c' object='mv_file_to_fq-mv_file_to_fq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_to_fq_CFLAGS) $(CFLAGS) -c -o mv_file_to_fq-mv_file_to_fq.o `test -f 'mv_file_to_fq.c' || echo '$(srcdir)/'`mv_file_to_fq.c

mv_file_to_fq-mv_file_to_fq.obj: mv_file_to_fq.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_to_fq_CFLAGS) $(CFLAGS) -MT mv_file_to_fq-mv_file_to_fq.obj -MD -MP -MF $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Tpo -c -o mv_file_to_fq-mv_file_to_fq.obj `if test -f 'mv_file_to_fq.c'; then $(CYGPATH_W) 'mv_file_to_fq.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_to_fq.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Tpo $(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po
#	$(AM_V_CC)source='mv_file_to_fq.c' object='mv_file_to_fq-mv_file_to_fq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mv_file_to_fq_CFLAGS) $(CFLAGS) -c -o mv_file_to_fq-mv_file_to_fq.obj `if test -f 'mv_file_to_fq.c'; then $(CYGPATH_W) 'mv_file_to_fq.c'; else $(CYGPATH_W) '$(srcdir)/mv_file_to_fq.c'; fi`

net_text_qt-net_text_qt.o: net_text_qt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(net_text_qt_CFLAGS) $(CFLAGS) -MT net_text_qt-net_text_qt.o -MD -MP -MF $(DEPDIR)/net_text_qt-net_text_qt.Tpo -c -o net_text_qt-net_text_qt.o `test -f 'net_text_qt.c' || echo '$(srcdir)/'`net_text_qt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/net_text_qt-net_text_qt.Tpo $(DEPDIR)/net_text_qt-net_text_qt.Po
#	$(AM_V_CC)source='net_text_qt.c' object='net_text_qt-net_text_qt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(net_text_qt_CFLAGS) $(CFLAGS) -c -o net_text_qt-net_text_qt.o `test -f 'net_text_qt.c' || echo '$(srcdir)/'`net_text_qt.c

net_text_qt-net_text_qt.obj: net_text_qt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(net_text_qt_CFLAGS) $(CFLAGS) -MT net_text_qt-net_text_qt.obj -MD -MP -MF $(DEPDIR)/net_text_qt-net_text_qt.Tpo -c -o net_text_qt-net_text_qt.obj `if test -f 'net_text_qt.c'; then $(CYGPATH_W) 'net_text_qt.c'; else $(CYGPATH_W) '$(srcdir)/net_text_qt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/net_text_qt-net_text_qt.Tpo $(DEPDIR)/net_text_qt-net_text_qt.Po
#	$(AM_V_CC)source='net_text_qt.c' object='net_text_qt-net_text_qt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(net_text_qt_CFLAGS) $(CFLAGS) -c -o net_text_qt-net_text_qt.obj `if test -f 'net_text_qt.c'; then $(CYGPATH_W) 'net_text_qt.c'; else $(CYGPATH_W) '$(srcdir)/net_text_qt.c'; fi`

qvf-qvf.o: qvf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_CFLAGS) $(CFLAGS) -MT qvf-qvf.o -MD -MP -MF $(DEPDIR)/qvf-qvf.Tpo -c -o qvf-qvf.o `test -f 'qvf.c' || echo '$(srcdir)/'`qvf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qvf-qvf.Tpo $(DEPDIR)/qvf-qvf.Po
#	$(AM_V_CC)source='qvf.c' object='qvf-qvf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_CFLAGS) $(CFLAGS) -c -o qvf-qvf.o `test -f 'qvf.c' || echo '$(srcdir)/'`qvf.c

qvf-qvf.obj: qvf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_CFLAGS) $(CFLAGS) -MT qvf-qvf.obj -MD -MP -MF $(DEPDIR)/qvf-qvf.Tpo -c -o qvf-qvf.obj `if test -f 'qvf.c'; then $(CYGPATH_W) 'qvf.c'; else $(CYGPATH_W) '$(srcdir)/qvf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qvf-qvf.Tpo $(DEPDIR)/qvf-qvf.Po
#	$(AM_V_CC)source='qvf.c' object='qvf-qvf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_CFLAGS) $(CFLAGS) -c -o qvf-qvf.obj `if test -f 'qvf.c'; then $(CYGPATH_W) 'qvf.c'; else $(CYGPATH_W) '$(srcdir)/qvf.c'; fi`

qvf_all-qvf_all.o: qvf_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_all_CFLAGS) $(CFLAGS) -MT qvf_all-qvf_all.o -MD -MP -MF $(DEPDIR)/qvf_all-qvf_all.Tpo -c -o qvf_all-qvf_all.o `test -f 'qvf_all.c' || echo '$(srcdir)/'`qvf_all.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qvf_all-qvf_all.Tpo $(DEPDIR)/qvf_all-qvf_all.Po
#	$(AM_V_CC)source='qvf_all.c' object='qvf_all-qvf_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_all_CFLAGS) $(CFLAGS) -c -o qvf_all-qvf_all.o `test -f 'qvf_all.c' || echo '$(srcdir)/'`qvf_all.c

qvf_all-qvf_all.obj: qvf_all.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_all_CFLAGS) $(CFLAGS) -MT qvf_all-qvf_all.obj -MD -MP -MF $(DEPDIR)/qvf_all-qvf_all.Tpo -c -o qvf_all-qvf_all.obj `if test -f 'qvf_all.c'; then $(CYGPATH_W) 'qvf_all.c'; else $(CYGPATH_W) '$(srcdir)/qvf_all.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qvf_all-qvf_all.Tpo $(DEPDIR)/qvf_all-qvf_all.Po
#	$(AM_V_CC)source='qvf_all.c' object='qvf_all-qvf_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qvf_all_CFLAGS) $(CFLAGS) -c -o qvf_all-qvf_all.obj `if test -f 'qvf_all.c'; then $(CYGPATH_W) 'qvf_all.c'; else $(CYGPATH_W) '$(srcdir)/qvf_all.c'; fi`

relay_FQ-relay_FQ.o: relay_FQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(relay_FQ_CFLAGS) $(CFLAGS) -MT relay_FQ-relay_FQ.o -MD -MP -MF $(DEPDIR)/relay_FQ-relay_FQ.Tpo -c -o relay_FQ-relay_FQ.o `test -f 'relay_FQ.c' || echo '$(srcdir)/'`relay_FQ.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/relay_FQ-relay_FQ.Tpo $(DEPDIR)/relay_FQ-relay_FQ.Po
#	$(AM_V_CC)source='relay_FQ.c' object='relay_FQ-relay_FQ.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(relay_FQ_CFLAGS) $(CFLAGS) -c -o relay_FQ-relay_FQ.o `test -f 'relay_FQ.c' || echo '$(srcdir)/'`relay_FQ.c

relay_FQ-relay_FQ.obj: relay_FQ.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(relay_FQ_CFLAGS) $(CFLAGS) -MT relay_FQ-relay_FQ.obj -MD -MP -MF $(DEPDIR)/relay_FQ-relay_FQ.Tpo -c -o relay_FQ-relay_FQ.obj `if test -f 'relay_FQ.c'; then $(CYGPATH_W) 'relay_FQ.c'; else $(CYGPATH_W) '$(srcdir)/relay_FQ.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/relay_FQ-relay_FQ.Tpo $(DEPDIR)/relay_FQ-relay_FQ.Po
#	$(AM_V_CC)source='relay_FQ.c' object='relay_FQ-relay_FQ.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(relay_FQ_CFLAGS) $(CFLAGS) -c -o relay_FQ-relay_FQ.obj `if test -f 'relay_FQ.c'; then $(CYGPATH_W) 'relay_FQ.c'; else $(CYGPATH_W) '$(srcdir)/relay_FQ.c'; fi`

retrieveMon-retrieveMon.o: retrieveMon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(retrieveMon_CFLAGS) $(CFLAGS) -MT retrieveMon-retrieveMon.o -MD -MP -MF $(DEPDIR)/retrieveMon-retrieveMon.Tpo -c -o retrieveMon-retrieveMon.o `test -f 'retrieveMon.c' || echo '$(srcdir)/'`retrieveMon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/retrieveMon-retrieveMon.Tpo $(DEPDIR)/retrieveMon-retrieveMon.Po
#	$(AM_V_CC)source='retrieveMon.c' object='retrieveMon-retrieveMon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(retrieveMon_CFLAGS) $(CFLAGS) -c -o retrieveMon-retrieveMon.o `test -f 'retrieveMon.c' || echo '$(srcdir)/'`retrieveMon.c

retrieveMon-retrieveMon.obj: retrieveMon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(retrieveMon_CFLAGS) $(CFLAGS) -MT retrieveMon-retrieveMon.obj -MD -MP -MF $(DEPDIR)/retrieveMon-retrieveMon.Tpo -c -o retrieveMon-retrieveMon.obj `if test -f 'retrieveMon.c'; then $(CYGPATH_W) 'retrieveMon.c'; else $(CYGPATH_W) '$(srcdir)/retrieveMon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/retrieveMon-retrieveMon.Tpo $(DEPDIR)/retrieveMon-retrieveMon.Po
#	$(AM_V_CC)source='retrieveMon.c' object='retrieveMon-retrieveMon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(retrieveMon_CFLAGS) $(CFLAGS) -c -o retrieveMon-retrieveMon.obj `if test -f 'retrieveMon.c'; then $(CYGPATH_W) 'retrieveMon.c'; else $(CYGPATH_W) '$(srcdir)/retrieveMon.c'; fi`

unlink_hash_map-unlink_hash_map.o: unlink_hash_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unlink_hash_map_CFLAGS) $(CFLAGS) -MT unlink_hash_map-unlink_hash_map.o -MD -MP -MF $(DEPDIR)/unlink_hash_map-unlink_hash_map.Tpo -c -o unlink_hash_map-unlink_hash_map.o `test -f 'unlink_hash_map.c' || echo '$(srcdir)/'`unlink_hash_map.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unlink_hash_map-unlink_hash_map.Tpo $(DEPDIR)/unlink_hash_map-unlink_hash_map.Po
#	$(AM_V_CC)source='unlink_hash_map.c' object='unlink_hash_map-unlink_hash_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unlink_hash_map_CFLAGS) $(CFLAGS) -c -o unlink_hash_map-unlink_hash_map.o `test -f 'unlink_hash_map.c' || echo '$(srcdir)/'`unlink_hash_map.c

unlink_hash_map-unlink_hash_map.obj: unlink_hash_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unlink_hash_map_CFLAGS) $(CFLAGS) -MT unlink_hash_map-unlink_hash_map.obj -MD -MP -MF $(DEPDIR)/unlink_hash_map-unlink_hash_map.Tpo -c -o unlink_hash_map-unlink_hash_map.obj `if test -f 'unlink_hash_map.c'; then $(CYGPATH_W) 'unlink_hash_map.c'; else $(CYGPATH_W) '$(srcdir)/unlink_hash_map.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unlink_hash_map-unlink_hash_map.Tpo $(DEPDIR)/unlink_hash_map-unlink_hash_map.Po
#	$(AM_V_CC)source='unlink_hash_map.c' object='unlink_hash_map-unlink_hash_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unlink_hash_map_CFLAGS) $(CFLAGS) -c -o unlink_hash_map-unlink_hash_map.obj `if test -f 'unlink_hash_map.c'; then $(CYGPATH_W) 'unlink_hash_map.c'; else $(CYGPATH_W) '$(srcdir)/unlink_hash_map.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po
	-rm -f ./$(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po
	-rm -f ./$(DEPDIR)/FQ_server-FQ_server.Po
	-rm -f ./$(DEPDIR)/FatalNotifier-FatalNotifier.Po
	-rm -f ./$(DEPDIR)/GenQinfo-GenQinfo.Po
	-rm -f ./$(DEPDIR)/L4_listener-L4_listener.Po
	-rm -f ./$(DEPDIR)/LogAgent-LogAgent.Po
	-rm -f ./$(DEPDIR)/LogCollector-LogCollector.Po
	-rm -f ./$(DEPDIR)/LogNotifier-LogNotifier.Po
	-rm -f ./$(DEPDIR)/MakeTestData-MakeTestData.Po
	-rm -f ./$(DEPDIR)/ManageFQ-ManageFQ.Po
	-rm -f ./$(DEPDIR)/ManageHashMap-ManageHashMap.Po
	-rm -f ./$(DEPDIR)/ManageSHMQ-ManageSHMQ.Po
	-rm -f ./$(DEPDIR)/SetMaster-SetMaster.Po
	-rm -f ./$(DEPDIR)/SetQueueHeader-SetQueueHeader.Po
	-rm -f ./$(DEPDIR)/TCP_sync_client-TCP_sync_client.Po
	-rm -f ./$(DEPDIR)/TCP_sync_server-TCP_sync_server.Po
	-rm -f ./$(DEPDIR)/TestFQ-TestFQ.Po
	-rm -f ./$(DEPDIR)/TestSQ-TestSQ.Po
	-rm -f ./$(DEPDIR)/create_hash_map-create_hash_map.Po
	-rm -f ./$(DEPDIR)/deFQ_XA-deFQ_XA.Po
	-rm -f ./$(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po
	-rm -f ./$(DEPDIR)/deFQ_batch-deFQ_batch.Po
	-rm -f ./$(DEPDIR)/deFQ_bundle-deFQ_bundle.Po
	-rm -f ./$(DEPDIR)/deFQ_thread-deFQ_thread.Po
	-rm -f ./$(DEPDIR)/deFQ_utl-deFQ_utl.Po
	-rm -f ./$(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po
	-rm -f ./$(DEPDIR)/enFQ_datafile-enFQ_datafile.Po
	-rm -f ./$(DEPDIR)/enFQ_thread-enFQ_thread.Po
	-rm -f ./$(DEPDIR)/enFQ_utl-enFQ_utl.Po
	-rm -f ./$(DEPDIR)/fq_snapshot-fq_snapshot.Po
	-rm -f ./$(DEPDIR)/fq_view-fq_view.Po
	-rm -f ./$(DEPDIR)/fqm-fqm.Po
	-rm -f ./$(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po
	-rm -f ./$(DEPDIR)/mem_queue_test-mem_queue_test.Po
	-rm -f ./$(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po
	-rm -f ./$(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po
	-rm -f ./$(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po
	-rm -f ./$(DEPDIR)/net_text_qt-net_text_qt.Po
	-rm -f ./$(DEPDIR)/qvf-qvf.Po
	-rm -f ./$(DEPDIR)/qvf_all-qvf_all.Po
	-rm -f ./$(DEPDIR)/relay_FQ-relay_FQ.Po
	-rm -f ./$(DEPDIR)/retrieveMon-retrieveMon.Po
	-rm -f ./$(DEPDIR)/unlink_hash_map-unlink_hash_map.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/FQ_Protocol_cli_txt-FQ_Protocol_cli_txt.Po
	-rm -f ./$(DEPDIR)/FQ_Protocol_svr-FQ_Protocol_svr.Po
	-rm -f ./$(DEPDIR)/FQ_server-FQ_server.Po
	-rm -f ./$(DEPDIR)/FatalNotifier-FatalNotifier.Po
	-rm -f ./$(DEPDIR)/GenQinfo-GenQinfo.Po
	-rm -f ./$(DEPDIR)/L4_listener-L4_listener.Po
	-rm -f ./$(DEPDIR)/LogAgent-LogAgent.Po
	-rm -f ./$(DEPDIR)/LogCollector-LogCollector.Po
	-rm -f ./$(DEPDIR)/LogNotifier-LogNotifier.Po
	-rm -f ./$(DEPDIR)/MakeTestData-MakeTestData.Po
	-rm -f ./$(DEPDIR)/ManageFQ-ManageFQ.Po
	-rm -f ./$(DEPDIR)/ManageHashMap-ManageHashMap.Po
	-rm -f ./$(DEPDIR)/ManageSHMQ-ManageSHMQ.Po
	-rm -f ./$(DEPDIR)/SetMaster-SetMaster.Po
	-rm -f ./$(DEPDIR)/SetQueueHeader-SetQueueHeader.Po
	-rm -f ./$(DEPDIR)/TCP_sync_client-TCP_sync_client.Po
	-rm -f ./$(DEPDIR)/TCP_sync_server-TCP_sync_server.Po
	-rm -f ./$(DEPDIR)/TestFQ-TestFQ.Po
	-rm -f ./$(DEPDIR)/TestSQ-TestSQ.Po
	-rm -f ./$(DEPDIR)/create_hash_map-create_hash_map.Po
	-rm -f ./$(DEPDIR)/deFQ_XA-deFQ_XA.Po
	-rm -f ./$(DEPDIR)/deFQ_XA_thread-deFQ_XA_thread.Po
	-rm -f ./$(DEPDIR)/deFQ_batch-deFQ_batch.Po
	-rm -f ./$(DEPDIR)/deFQ_bundle-deFQ_bundle.Po
	-rm -f ./$(DEPDIR)/deFQ_thread-deFQ_thread.Po
	-rm -f ./$(DEPDIR)/deFQ_utl-deFQ_utl.Po
	-rm -f ./$(DEPDIR)/deQ_XA_enQ-deQ_XA_enQ.Po
	-rm -f ./$(DEPDIR)/enFQ_datafile-enFQ_datafile.Po
	-rm -f ./$(DEPDIR)/enFQ_thread-enFQ_thread.Po
	-rm -f ./$(DEPDIR)/enFQ_utl-enFQ_utl.Po
	-rm -f ./$(DEPDIR)/fq_snapshot-fq_snapshot.Po
	-rm -f ./$(DEPDIR)/fq_view-fq_view.Po
	-rm -f ./$(DEPDIR)/fqm-fqm.Po
	-rm -f ./$(DEPDIR)/lock_perfermance_TPS-lock_perfermance_TPS.Po
	-rm -f ./$(DEPDIR)/mem_queue_test-mem_queue_test.Po
	-rm -f ./$(DEPDIR)/mv_file_b_to_fq-mv_file_b_to_fq.Po
	-rm -f ./$(DEPDIR)/mv_file_b_to_fq_multi-mv_file_b_to_fq_multi.Po
	-rm -f ./$(DEPDIR)/mv_file_to_fq-mv_file_to_fq.Po
	-rm -f ./$(DEPDIR)/net_text_qt-net_text_qt.Po
	-rm -f ./$(DEPDIR)/qvf-qvf.Po
	-rm -f ./$(DEPDIR)/qvf_all-qvf_all.Po
	-rm -f ./$(DEPDIR)/relay_FQ-relay_FQ.Po
	-rm -f ./$(DEPDIR)/retrieveMon-retrieveMon.Po
	-rm -f ./$(DEPDIR)/unlink_hash_map-unlink_hash_map.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
